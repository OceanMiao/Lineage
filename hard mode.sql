-- QUERY ESTRAZIONE PARCO OSSERVATO INTEGRATO + SCIOLTO, 
-- A/V DA VITAMIA
-- E/G/M DA NEWMODEL


ALTER PROCEDURE [DBO].[FRC_P_PARCO_OSSERVATO_DETTAGLIO] 
AS

DECLARE @DATAFINEOSSERVATO DATE
DECLARE @DATAINIZIOOSSERVATO DATE
DECLARE @DATAFINENUOVIREALI DATE
DECLARE @UNITARIOACQUISTOMOBILE DECIMAL(10,2)
DECLARE @LIST_FITT_VEN_E varchar(10)
DECLARE @LIST_FITT_VEN_G varchar(10)
DECLARE @PERDITE_DI_RETE_CONSUMER FLOAT = (SELECT PARAMETRO_VALORE FROM FRC_PARAMETRI WHERE PARAMETRO_NOME = 'PERDITE DI RETE CONSUMER');
DECLARE @PERDITE_DI_RETE_BUSINESS FLOAT = (SELECT PARAMETRO_VALORE FROM FRC_PARAMETRI WHERE PARAMETRO_NOME = 'PERDITE DI RETE BUSINESS');

DECLARE @STRINGA_LISTINO_O_SOTTOTIPO_ASSENTE varchar(30) = 'NON PRESENTE';

BEGIN
	
	SET @DATAFINEOSSERVATO = (SELECT CONVERT(DATE, PARAMETRO_VALORE, 112) FROM FRC_PARAMETRI WHERE PARAMETRO_NOME = 'DATA FINE OSSERVATO');
	SET @DATAINIZIOOSSERVATO = (SELECT CONVERT(DATE, PARAMETRO_VALORE, 112) FROM FRC_PARAMETRI WHERE PARAMETRO_NOME = 'Data Inizio Osservato');
	SET @DATAFINENUOVIREALI = (SELECT CONVERT(DATE, PARAMETRO_VALORE, 112) FROM FRC_PARAMETRI WHERE PARAMETRO_NOME = 'Data Fine Nuovi Reali');
	SET @UNITARIOACQUISTOMOBILE =(SELECT MAX(VALORE_F1) FROM FRC_M_LISTINI_FITTIZI WHERE SERVIZIO='M');
	SET @LIST_FITT_VEN_E = (select idListinoVendita
							from frc_t_ro_sottotipocontratto
							where upper(codice_sottotipoContratto) like 'CONTRATTOSCIOLTO%'
								and upper(servizio) = 'ENERGIA');

	SET @LIST_FITT_VEN_G = (    select idListinoVendita
								from frc_t_ro_sottotipocontratto
								where upper(codice_sottotipoContratto) like 'CONTRATTOSCIOLTO%'
									and upper(servizio) = 'GAS'
							)
							;


	IF OBJECT_ID('FRC_IMPORT_E', 'U') IS NOT NULL
		DROP TABLE FRC_IMPORT_E;

	IF OBJECT_ID('FRC_IMPORT_G', 'U') IS NOT NULL
		DROP TABLE FRC_IMPORT_G;

	IF OBJECT_ID('FRC_IMPORT_AV', 'U') IS NOT NULL
		DROP TABLE FRC_IMPORT_AV;

	IF OBJECT_ID('FRC_IMPORT_M', 'U') IS NOT NULL
		DROP TABLE FRC_IMPORT_M;

	-- Calcolo il saldo fatturato 
	-- Prima stazione: recupero i clienti di cui mi importa (integrato)
		
		-- A/V		
		select distinct calendario = meseriferimento,
				   a.servizio, 
				   a.idcliente
		into #ClientiIntegrato
		FROM [dbo].[SIMULAZIONEMARGINEVITAMIA] AS A
		LEFT JOIN [dbo].[FRC_WT_DIM_BASECLICONTR] AS DD  ON DD.IDCONTRATTO = A.IDCONTRATTO
		where CASE 
					WHEN DD.CANALEVENDITA='CAMPAGNA NAZIONALE' AND DD.TIPOCLIENTECLUSTER='CONSUMER' 
					THEN 'CAMPAGNA NAZIONALE - CONSUMER' ELSE DD.TIPOCLIENTECLUSTER 
				END not like 'SCIOLTO%'
				and MESERIFERIMENTO <= @DATAFINEOSSERVATO AND A.SERVIZIO IN ('V', 'A')
				AND MESERIFERIMENTO >= @DATAINIZIOOSSERVATO
		
		union all
		
		-- E
		select distinct calendario = KEYDATA,
				servizio = 'E',
				a.IDCLIENTE
		from newModel_ParcoEnergia a
		LEFT JOIN   [dbo].[FRC_WT_DIM_BASECLICONTR] AS DD  ON DD.IDCONTRATTO = A.IDCONTRATTO
		where CASE WHEN DD.CANALEVENDITA='CAMPAGNA NAZIONALE' AND DD.TIPOCLIENTECLUSTER='CONSUMER' THEN 'CAMPAGNA NAZIONALE - CONSUMER' 
			ELSE DD.TIPOCLIENTECLUSTER END not like 'SCIOLTO%'
			and KEYDATA <= @DATAFINEOSSERVATO AND KEYDATA >= @DATAINIZIOOSSERVATO

		union all

		-- G
		select distinct calendario=KEYDATA,
					servizio = 'G',
					a.idCliente
		from newModel_ParcoGas a
		LEFT JOIN   [dbo].[FRC_WT_DIM_BASECLICONTR] AS DD  ON DD.IDCONTRATTO = A.IDCONTRATTO
		where CASE WHEN DD.CANALEVENDITA='CAMPAGNA NAZIONALE' AND DD.TIPOCLIENTECLUSTER='CONSUMER' THEN 'CAMPAGNA NAZIONALE - CONSUMER' 
			ELSE DD.TIPOCLIENTECLUSTER END not like 'SCIOLTO%'
				and KEYDATA <= @DATAFINEOSSERVATO AND KEYDATA >= @DATAINIZIOOSSERVATO

		union all

		-- M
		select distinct calendario=KEYDATA,
					servizio = 'M',
					a.idCliente
		from newModel_ParcoMobile a
		LEFT JOIN   [dbo].[FRC_WT_DIM_BASECLICONTR] AS DD  ON DD.IDCONTRATTO = A.IDCONTRATTO
		where CASE WHEN DD.CANALEVENDITA='CAMPAGNA NAZIONALE' AND DD.TIPOCLIENTECLUSTER='CONSUMER' THEN 'CAMPAGNA NAZIONALE - CONSUMER' 
			ELSE DD.TIPOCLIENTECLUSTER END not like 'SCIOLTO%'
				and KEYDATA <= @DATAFINEOSSERVATO AND KEYDATA >= @DATAINIZIOOSSERVATO
		;

		-- Calcoliamo il saldo fatturato medio per ciascuno servizio (che poi agganciamo)
		select calendario, a.IdCliente, -1.0*(SALDOFATTURATO + SALDOFATTURATODODICESIMA)/servizi SALDOFATTURATO
		into #ClientiSaldo
		from (
			select calendario, IdCliente, COUNT(distinct servizio) servizi
			from #ClientiIntegrato
			group by calendario, IdCliente
		) a
		LEFT JOIN   [DBO].[MODFORECAST_INPUT_SALDOFATTURATO] F ON F.CLIENTE = A.IDCLIENTE AND F.MESEEMISSIONESALDO = calendario
		;


		-- Calcolo le date di attivazione e cessazione per ogni utente A/V
		-- Necessario per valorizzare le utenze nuove e le utenze perse
		
		select distinct IdCliente, IdContratto, cast(idadslcliente as varchar) utenza, servizio = 'A', 	
				AnnoMeseAttivazione = substring(convert(varchar, MIN(DataAttivazione) over (partition by idCliente, IdContratto, idadslcliente), 112),1,6),
				AnnoMeseCessazione =  substring(convert(varchar, MAX(isnull(DataDisattivazione, '2200-12-01')) over (partition by idcliente, IdContratto, idadslcliente), 112), 1, 6)
		into #AttivazioniCessazioni
		from newModel_ParcoAdsl

		union all

		--select distinct idCliente, idcontratto, concat(idcliente,'-',idcli) utenza, servizio = 'V',
		--					AnnoMeseAttivazione = substring(convert(varchar, MIN(DataAttivazione) over (partition by idCliente, IdContratto, concat(idcliente,'-',idcli)),112), 1,6),
		--					AnnoMeseCessazione =  substring(convert(varchar, MAX(isnull(DataDisattivazione, '2200-12-01')) over (partition by idcliente, IdContratto, concat(idcliente,'-',idcli)),112), 1, 6)
		--from newmodel_parcoVoce;
		SELECT DISTINCT
			CC_CLIENTE AS IDCLIENTE, 
			CC_IDCONTRATTO AS IDCONTRATTO, 
			CONCAT(CC_CLIENTE,'-',CC_CLI) UTENZA, 
			SERVIZIO = 'V',
			ANNOMESEATTIVAZIONE = SUBSTRING(CONVERT(VARCHAR, MIN(CC_DTINIVAL) OVER (PARTITION BY CC_CLIENTE, CC_IDCONTRATTO, CONCAT(CC_CLIENTE,'-',CC_CLI)),112), 1,6),
			ANNOMESECESSAZIONE =  SUBSTRING(CONVERT(VARCHAR, MAX(ISNULL(CC_DTFINVAL, '2200-12-01')) OVER (PARTITION BY CC_CLIENTE, CC_IDCONTRATTO, CONCAT(CC_CLIENTE,'-',CC_CLI)),112), 1, 6)
		FROM SIN_VIEWER.SIN_AZ.DBO.TCLIENTICLI
		WHERE CC_IDCONTRATTO IS NOT NULL
			AND CC_DTINIVAL IS NOT NULL
		;


		WITH IMPORT_AV AS (
		SELECT A.SERVIZIO
			, CANALE = DD.CANALEVENDITA 
			, TIPOCLIENTE = CASE WHEN DD.CANALEVENDITA='CAMPAGNA NAZIONALE' AND DD.TIPOCLIENTECLUSTER='CONSUMER' THEN 'CAMPAGNA NAZIONALE - CONSUMER' 
									ELSE DD.TIPOCLIENTECLUSTER END
			, MESE = CONVERT(DATE,CONVERT(VARCHAR(7), DD.DATASTIPULA, 112)  + '-01')
			, ANNO = DATEDIFF (MONTH, convert(date, convert(varchar, ac.AnnoMeseAttivazione)+'01', 112), MeseRiferimento)/12 + 1
			, CAST(A.IDCONTRATTOPADRE AS VARCHAR(14)) IDCONTRATTOPADRE
			, IDCONTRATTOFIGLIO = CAST(A.IDCONTRATTO AS VARCHAR(14))
			, SOTTOTIPOCONTRATTO = ISNULL(DD.CODICESOTTOTIPOCONTRATTO,@STRINGA_LISTINO_O_SOTTOTIPO_ASSENTE)
			, A.IDCLIENTE
			, IDLISTVEN = @STRINGA_LISTINO_O_SOTTOTIPO_ASSENTE
			, IDLISTACQ = @STRINGA_LISTINO_O_SOTTOTIPO_ASSENTE
			, ANNOMESEATTIVAZIONE = convert(date, convert(varchar, ac.AnnoMeseAttivazione)+'01', 112)
			, CALENDARIO = MESERIFERIMENTO
			, MESEDICONSUMO = MONTH(MESERIFERIMENTO)
			, CAST(A.UTENZA AS VARCHAR(25)) UTENZA
			, CONSUMO = CASE WHEN A.SERVIZIO = 'A' THEN TAGLIA ELSE NULL END
			, SALDOULTIMOMESE
			, BONUSINIZIALE=0
			--OLD , BONUSINIZIALE = BONUSDISATTIVAZIONE
			, MODALITAPAGAMENTO = ISNULL(MODALITAPAGAMENTO, 'BOLLETTINO')
			, MODALITASPEDIZIONEFATTURA = ISNULL(MODALITASPEDIZIONEFATTURA, 'CARTACEA')
			, CANONERAI = CASE WHEN CODTARIFFATRASPORTO = 'D2' THEN 1 ELSE 0 END
			, FLAGTIPOPARCO = 'OSSERVATO'
			, ULTIMORECORDUTENZA = case when convert(int, convert(varchar(6),meseRiferimento,112)) = ac.AnnoMeseCessazione then 1 else 0 end
			, PRIMORECORDUTENZA = case when convert(int, convert(varchar(6),meseRiferimento,112)) = ac.AnnoMeseAttivazione then 1 else 0 end
			, SALDOFATTURATO
			, IDCURVA= CASE WHEN A.SERVIZIO='A' THEN -2 ELSE ISNULL(M.IDCURVA, 80)  END 
			, DATAFINEPRELIEVO = convert(date, convert(varchar, ac.AnnoMeseCessazione)+'01', 112) 
			, CANONEMESE
			, SMS = 0 
			, MINUTI = 0
			, GB = 0
			, CONSUMODEFF1 = 0
			, CONSUMODEFF2 = 0
			, CONSUMODEFF3 = 0
			, CONSUMORAMO_1 = (CASE WHEN IDDIRETTRICETRAFFICO = 1 THEN CONSUMO ELSE 0 END)
			, CONSUMORAMO_2 = (CASE WHEN IDDIRETTRICETRAFFICO = 2 THEN CONSUMO ELSE 0 END)
			, TAGLIA
			, TAGLIARAMO_1 = (CASE WHEN IDDIRETTRICETRAFFICO = 1 THEN TAGLIA ELSE 0 END)
			, TAGLIARAMO_2 = (CASE WHEN IDDIRETTRICETRAFFICO = 2 THEN TAGLIA ELSE 0 END)
			, TAGLIAMINUTI=NULL
			, TAGLIASMS=NULL
			, TAGLIAGIGA=NULL
			, UNITARIOPS = PREZZOOLTRESOGLIA 
			, UNITARIOPM = PREZZOSOTTOSOGLIA
			, UNITARIOPM_RAMO1 = (CASE WHEN IDDIRETTRICETRAFFICO = 1 THEN PREZZOSOTTOSOGLIA ELSE 0 END) 
			, UNITARIOPM_RAMO2 = (CASE WHEN IDDIRETTRICETRAFFICO = 2 THEN PREZZOSOTTOSOGLIA ELSE 0 END) 
			, UNITARIOPS_RAMO1 = (CASE WHEN IDDIRETTRICETRAFFICO = 1 THEN PREZZOOLTRESOGLIA ELSE 0 END) 
			, UNITARIOPS_RAMO2 = (CASE WHEN IDDIRETTRICETRAFFICO = 2 THEN PREZZOOLTRESOGLIA ELSE 0 END) 
			, UNITARIOVENDITAPACCHETTO = ISNULL(CanoneMese, 0) / CASE WHEN CASE WHEN TAGLIA IS NULL AND A.SERVIZIO = 'V' THEN 1 ELSE TAGLIA END = 0 THEN 1 ELSE CASE WHEN TAGLIA IS NULL AND A.SERVIZIO = 'V' THEN 1 ELSE TAGLIA END END
			, UNITARIOACQUISTO = 
-- 15/05
			CASE WHEN A.SERVIZIO='A' THEN PRICING.UNITARIOACQUISTO ELSE
			(ISNULL(COSTO, 0)  / (CASE WHEN CONSUMO = 0 THEN 1 ELSE CONSUMO END ) ) END
			, VOLUMEPERSO=NULL
			, STIMAMINUTI_PARCO_OSS=0
			, STIMASMS_PARCO_OSS=0
			, STIMAGB_PARCO_OSS=0
			, IdDirettriceTraffico
		--INTO FRC_IMPORT_AV
		FROM   [DBO].[SIMULAZIONEMARGINEVITAMIA] AS A
		LEFT JOIN   [DBO].[FRC_WT_DIM_BASECLICONTR] AS DD  ON DD.IDCONTRATTO = A.IDCONTRATTO
		LEFT JOIN #ClientiSaldo F ON F.idCLIENTE = A.IDCLIENTE AND F.calendario = MESERIFERIMENTO
		LEFT JOIN FRC_M_CURVE_PARCO_OSS M
			ON DD.TIPOCLIENTECLUSTER=M.TIPOCLIENTE
			AND A.SERVIZIO=M.SERVIZIO
		LEFT JOIN FRC_WT_DIM_PRICING PRICING 
			ON  (CASE WHEN DD.CANALEVENDITA='CAMPAGNA NAZIONALE' AND DD.TIPOCLIENTECLUSTER='CONSUMER' THEN 'CAMPAGNA NAZIONALE - CONSUMER' 
				ELSE DD.TIPOCLIENTECLUSTER END)=PRICING.TIPOCLIENTE
			AND A.SERVIZIO=PRICING.SERVIZIO
			and month(A.MeseRiferimento) = PRICING.MESE

		LEFT JOIN #AttivazioniCessazioni ac
			on A.IdCliente = ac.IdCliente and a.Servizio = ac.Servizio and A.Utenza = ac.Utenza and A.IdContratto = ac.IdContratto
		

		WHERE MESERIFERIMENTO <= @DATAFINEOSSERVATO AND A.SERVIZIO IN ('V', 'A')
			AND MESERIFERIMENTO >= @DATAINIZIOOSSERVATO
	
	)
		
		
		SELECT 
			IMPORT_AV.SERVIZIO
			, IMPORT_AV.CANALE
			, IMPORT_AV.TIPOCLIENTE 
			, IMPORT_AV.MESE 
			, IMPORT_AV.ANNO 
			, IMPORT_AV.IDCONTRATTOPADRE
			, IMPORT_AV.IDCONTRATTOFIGLIO
			, IMPORT_AV.SOTTOTIPOCONTRATTO
			, IMPORT_AV.IDCLIENTE
			, IMPORT_AV.IDLISTVEN
			, IMPORT_AV.IDLISTACQ 
			, IMPORT_AV.ANNOMESEATTIVAZIONE
			, IMPORT_AV.CALENDARIO
			, IMPORT_AV.MESEDICONSUMO 
			, IMPORT_AV.UTENZA
			, IMPORT_AV.CONSUMO 
			, IMPORT_AV.SALDOULTIMOMESE
			, IMPORT_AV.BONUSINIZIALE
			--OLD , BONUSINIZIALE = BONUSDISATTIVAZIONE
			, IMPORT_AV.MODALITAPAGAMENTO
			, IMPORT_AV.MODALITASPEDIZIONEFATTURA
			, IMPORT_AV.CANONERAI
			, IMPORT_AV.FLAGTIPOPARCO
			, IMPORT_AV.ULTIMORECORDUTENZA 
			, IMPORT_AV.PRIMORECORDUTENZA
			, IMPORT_AV.SALDOFATTURATO
			, IMPORT_AV.IDCURVA
			, IMPORT_AV.DATAFINEPRELIEVO 
			, IMPORT_AV.CANONEMESE
			, IMPORT_AV.SMS
			, IMPORT_AV.MINUTI
			, IMPORT_AV.GB
			, IMPORT_AV.CONSUMODEFF1
			, IMPORT_AV.CONSUMODEFF2 
			, IMPORT_AV.CONSUMODEFF3 
			, IMPORT_AV.CONSUMORAMO_1
			, IMPORT_AV.CONSUMORAMO_2
			, IMPORT_AV.TAGLIA
			, IMPORT_AV.TAGLIARAMO_1 
			, IMPORT_AV.TAGLIARAMO_2
			, IMPORT_AV.TAGLIAMINUTI
			, IMPORT_AV.TAGLIASMS
			, IMPORT_AV.TAGLIAGIGA
			, IMPORT_AV.UNITARIOPS 
			, IMPORT_AV.UNITARIOPM
			, IMPORT_AV.UNITARIOPM_RAMO1
			, IMPORT_AV.UNITARIOPM_RAMO2
			, IMPORT_AV.UNITARIOPS_RAMO1
			, IMPORT_AV.UNITARIOPS_RAMO2
			, IMPORT_AV.UNITARIOVENDITAPACCHETTO 
			, IMPORT_AV.UNITARIOACQUISTO 
			, IMPORT_AV.VOLUMEPERSO
			, IMPORT_AV.STIMAMINUTI_PARCO_OSS
			, IMPORT_AV.STIMASMS_PARCO_OSS
			, IMPORT_AV.STIMAGB_PARCO_OSS
			, STIMACONSUMOANNUO_PARCO_OSS=(CASE WHEN IMPORT_AV.SERVIZIO='A' AND PERC_CONSUMO<>0 THEN CONSUMO/PERC_CONSUMO 
												WHEN IMPORT_AV.SERVIZIO='V' AND PERC_CONSUMO_F1<>0 AND PERC_CONSUMO_F2<>0 THEN (CONSUMORAMO_1/PERC_CONSUMO_F1)+(CONSUMORAMO_2/PERC_CONSUMO_F2)
												ELSE 0 END)
			, COSTOMESE_OSS_INT=(CASE WHEN IMPORT_AV.SERVIZIO='A' THEN CONSUMO ELSE CONSUMORAMO_1+CONSUMORAMO_2 END) * UNITARIOACQUISTO
			, FATTURATO_OSS_INT=CANONEMESE
			,RICAVOMESE_OSS_INT= (CASE WHEN IMPORT_AV.SERVIZIO='A' THEN TAGLIA ELSE TAGLIARAMO_1+TAGLIARAMO_2 END)*UNITARIOVENDITAPACCHETTO  
			--, RICAVOMESE_OSS_INT = (CASE WHEN SERVIZIO='A' THEN CONSUMO ELSE CONSUMORAMO_1+CONSUMORAMO_2 END) * UNITARIOVENDITAPACCHETTO MODIFICATO 23/04
			, DIFFERENZEPOSITIVE_OSS_INT=
				 CASE WHEN IMPORT_AV.SERVIZIO='A' THEN 0
				 ELSE ((CASE WHEN TAGLIARAMO_1-CONSUMORAMO_1>0 THEN TAGLIARAMO_1-CONSUMORAMO_1 ELSE 0 END) +
				 (CASE WHEN TAGLIARAMO_2-CONSUMORAMO_2>0 THEN TAGLIARAMO_2-CONSUMORAMO_2 ELSE 0 END))  END 
			 , DIFFERENZENEGATIVE_OSS_INT=
				 CASE WHEN IMPORT_AV.SERVIZIO='A' THEN 0
				 ELSE ((CASE WHEN TAGLIARAMO_1-CONSUMORAMO_1<0 THEN TAGLIARAMO_1-CONSUMORAMO_1 ELSE 0 END) +
				 (CASE WHEN TAGLIARAMO_2-CONSUMORAMO_2<0 THEN TAGLIARAMO_2-CONSUMORAMO_2 ELSE 0 END))  END 
			 , 
			 MOVIMENTAZCONTOPOS_INT_OSS= 
				 CASE WHEN IMPORT_AV.SERVIZIO='A' THEN 0
				 ELSE ((CASE WHEN TAGLIARAMO_1-CONSUMORAMO_1>0 THEN (TAGLIARAMO_1-CONSUMORAMO_1)*UNITARIOPM_RAMO1 ELSE 0 END) +
				 (CASE WHEN TAGLIARAMO_2-CONSUMORAMO_2>0 THEN (TAGLIARAMO_2-CONSUMORAMO_2 )*UNITARIOPM_RAMO2 ELSE 0 END))  END 
			 , MOVIMENTAZCONTONEG_INT_OSS=
				 CASE WHEN IMPORT_AV.SERVIZIO='A' THEN 0
				 ELSE ((CASE WHEN TAGLIARAMO_1-CONSUMORAMO_1<0 THEN (TAGLIARAMO_1-CONSUMORAMO_1)*UNITARIOPS_RAMO1 ELSE 0 END) +
				 (CASE WHEN TAGLIARAMO_2-CONSUMORAMO_2<0 THEN (TAGLIARAMO_2-CONSUMORAMO_2)*UNITARIOPS_RAMO2 ELSE 0 END))  END 
			 ,MOVIMENTAZIONICONTO_INT_OSS=
				  CASE WHEN IMPORT_AV.SERVIZIO='A' THEN 0 
				  ELSE
						case when tagliaramo_1 > consumoramo_1 
							then (TAGLIARAMO_1-CONSUMORAMO_1)*UNITARIOPM_RAMO1
							else (tagliaRamo_1-consumoRamo_1)*UNITARIOPS_RAMO1
						end 
						+ 
						case when tagliaramo_2 > consumoRamo_2
							then (TAGLIARAMO_2-CONSUMORAMO_2)*UNITARIOPM_RAMO2
							else (TAGLIARAMO_2-CONSUMORAMO_2)*UNITARIOPS_RAMO2
						end

				 END
				 
			, VOLUMEFINALE_OSS_INT= CASE WHEN IMPORT_AV.SERVIZIO='A' THEN CONSUMO ELSE (CONSUMORAMO_1+CONSUMORAMO_2) END 
			, BONUSINIZIALESALDATI=BONUSINIZIALE

			, CR_POSITIVO_INT_OSS = case when import_AV.servizio = 'V' then SUM(CASE WHEN IMPORT_AV.TAGLIARAMO_1 - IMPORT_AV.CONSUMORAMO_1 >=0 
												THEN  (IMPORT_AV.TAGLIARAMO_1 - IMPORT_AV.CONSUMORAMO_1)*IMPORT_AV.UNITARIOPM_RAMO1
												ELSE 0
											END
											+
											CASE WHEN IMPORT_AV.TAGLIARAMO_2 - IMPORT_AV.CONSUMORAMO_2 >=0 
												THEN  (IMPORT_AV.TAGLIARAMO_2 - IMPORT_AV.CONSUMORAMO_2)*IMPORT_AV.UNITARIOPM_RAMO2
												ELSE 0 
											END
										) OVER (PARTITION BY UTENZA, ANNOMESEATTIVAZIONE, IDCONTRATTOFIGLIO, ANNO, idDirettriceTraffico ORDER BY CALENDARIO ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
										else 0
									end
			, CR_NEGATIVO_INT_OSS = case when import_AV.servizio = 'V' then SUM(CASE WHEN IMPORT_AV.TAGLIARAMO_1 - IMPORT_AV.CONSUMORAMO_1 < 0 
												THEN  (IMPORT_AV.TAGLIARAMO_1 - IMPORT_AV.CONSUMORAMO_1)*IMPORT_AV.UNITARIOPS_RAMO1
												ELSE 0 
											END
											+
											CASE WHEN IMPORT_AV.TAGLIARAMO_2 - IMPORT_AV.CONSUMORAMO_2 <0 
												THEN  (IMPORT_AV.TAGLIARAMO_2 - IMPORT_AV.CONSUMORAMO_2)*IMPORT_AV.UNITARIOPS_RAMO2
												ELSE 0 
											END ) OVER (PARTITION BY UTENZA, ANNOMESEATTIVAZIONE, IDCONTRATTOFIGLIO, ANNO, idDirettriceTraffico ORDER BY CALENDARIO ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
										else 0 
									end

		INTO FRC_IMPORT_AV
		FROM IMPORT_AV IMPORT_AV
		LEFT JOIN FRC_WT_DIM_CURVECOMPORTAMENTO CURVECONSUMO
		ON IMPORT_AV.IDCURVA=CURVECONSUMO.IDCURVA
			AND IMPORT_AV.SERVIZIO=CURVECONSUMO.SERVIZIO
			AND IMPORT_AV.MESEDICONSUMO=CURVECONSUMO.MESEDICONSUMO
		option (MAXDOP 0)

	;
		
		WITH IMPORT_E AS (
		SELECT SERVIZIO = 'E'
				, CANALE = DD.CANALEVENDITA 
				, TIPOCLIENTE = CASE WHEN DD.CANALEVENDITA='CAMPAGNA NAZIONALE' AND DD.TIPOCLIENTECLUSTER='CONSUMER' THEN 'CAMPAGNA NAZIONALE - CONSUMER' 
			ELSE DD.TIPOCLIENTECLUSTER END
				, MESE = CONVERT(DATE,CONVERT(VARCHAR(7), DD.DATASTIPULA, 112)  + '-01')
				, ANNO= DATEDIFF (MONTH, DATAINIZIOPRELIEVO,KEYDATA)/12 + 1
				, A.IDCONTRATTOPADRE
				, IDCONTRATTOFIGLIO = A.IDCONTRATTO
				, SOTTOTIPOCONTRATTO = ISNULL(DD.CODICESOTTOTIPOCONTRATTO,@STRINGA_LISTINO_O_SOTTOTIPO_ASSENTE)
				, A.IDCLIENTE
				, case 
					when dd.tipoClienteCluster like 'SCIOLTO%' 
					then ISNULL(CAST(IDLISTVEN AS VARCHAR(50)), @LIST_FITT_VEN_E)
					else CAST(IDLISTVEN AS VARCHAR(50))
				end IDLISTVEN
				, case 
					when dd.tipoClienteCluster like 'SCIOLTO%' 
					then ISNULL(CAST(IDLISTACQ AS VARCHAR(50)), 'LIST_FITTIZIO')
					else CAST(IDLISTACQ AS VARCHAR(50))
				end IDLISTACQ
				, ANNOMESEATTIVAZIONE = CONVERT(DATE, CONVERT(VARCHAR(6), DATAINIZIOPRELIEVO , 112) + '01')
				, CALENDARIO = KEYDATA
				, MESEDICONSUMO = MONTH(KEYDATA)
				, UTENZA = A.POD COLLATE LATIN1_GENERAL_CI_AS
				, CONSUMO = TOTMESE --CASE WHEN A.SERVIZIO = 'A' THEN TAGLIA ELSE CONSUMO END
				, SALDOULTIMOMESE = NULL
				, BONUSINIZIALE = CANONEATTUALE
				-- OLD , BONUSINIZIALE = NULL --BONUSDISATTIVAZIONE
				, MODALITAPAGAMENTO = ISNULL(MODALITAPAGAMENTO, 'BOLLETTINO')
				, MODALITASPEDIZIONEFATTURA = ISNULL(MODALITASPEDIZIONEFATTURA, 'CARTACEA')
				, CANONERAI = CASE WHEN A.UTENZA = 'D2' THEN 1 ELSE 0 END
				, FLAGTIPOPARCO = 'OSSERVATO'
				, ULTIMORECORDUTENZA
				, PRIMORECORDUTENZA
				, SALDOFATTURATO
				, ISNULL(IdCurvaICO, -1) IDCURVA
				, DATAFINEPRELIEVO
				, CANONEMESE = CANONEATTUALE
				, SMS = 0 
				, MINUTI = 0
				, GB = 0
				, CONSUMODEFF1 
				, CONSUMODEFF2 
				, CONSUMODEFF3 
				, CONSUMORAMO_1 = 0
				, CONSUMORAMO_2 = 0
				, FLAG_D2 = CASE WHEN CODTARIFFATRASPORTO_PUNTO LIKE '%D2%' THEN 1 ELSE 0 END
				, TAGLIA= ConsumoMeseAttuale
				, TAGLIARAMO_1 = NULL
				, TAGLIARAMO_2 =NULL
				, TAGLIAMINUTI=NULL
				, TAGLIASMS=NULL
				, TAGLIAGIGA=NULL
				, UNITARIOPS = PREZZOOLTRESOGLIA 
				, UNITARIOPM = PREZZOSOTTOSOGLIA
				, UNITARIOPM_RAMO1 =NULL 
				, UNITARIOPM_RAMO2  =NULL 
				, UNITARIOPS_RAMO1  =NULL 
				, UNITARIOPS_RAMO2  =NULL 
				, UNITARIOVENDITAPACCHETTO = ISNULL(CanoneAttuale,0)/(CASE WHEN CONSUMOMESEATTUALE=0 THEN 1 ELSE CONSUMOMESEATTUALE END )
				, UNITARIOACQUISTO =  (ISNULL(consumoDefF1* ACQF1,0) + isnull(consumoDefF2 * ACQF2,0) + isnull(consumoDefF3 * ACQF3, 0) )/ (CASE WHEN (TOTMESE)= 0 THEN 1 ELSE (TOTMESE) END)
				, VOLUMEPERSO= case when UltimorecordUtenza=1 then StimaConsumoAnnuo else null end
				,STIMACONSUMOANNUO_PARCO_OSS=STIMACONSUMOANNUO
				,STIMAMINUTI_PARCO_OSS=0
				,STIMASMS_PARCO_OSS=0
				,STIMAGB_PARCO_OSS=0
		FROM   [DBO].[NEWMODEL_PARCOENERGIA] AS A
		LEFT JOIN   [DBO].[FRC_WT_DIM_BASECLICONTR] AS DD  ON DD.IDCONTRATTO = A.IDCONTRATTO
		LEFT JOIN #ClientiSaldo F ON F.idCLIENTE = A.IDCLIENTE AND F.calendario = KEYDATA
		
		WHERE (FLAGINIZIOPREVISTO = 'ATTIVO'
				AND KEYDATA <= @DATAFINEOSSERVATO
				AND KEYDATA >= @DATAINIZIOOSSERVATO
			) -- vero parco osservato 
			--or (FlagInizioPrevisto = 'ATTIVO'
			--	and KeyData > @DATAFINEOSSERVATO
			--	and KeyData = DataInizioPrelievo
			--	and KeyData <= @DataFineNuoviReali                   
			--) -- Nuovi reali
		)

		SELECT e.*,
				COSTOMESE_OSS_INT = (case when TIPOCLIENTE like '%CONSUMER%' then @PERDITE_DI_RETE_CONSUMER 
											when TIPOCLIENTE like '%BUSINESS%' then @PERDITE_DI_RETE_BUSINESS
											else 1
										end) * (ConsumoDefF1 * l.VALORE_F1 + ConsumoDefF2 *l.VALORE_F2 + ConsumoDefF3 * l.VALORE_F3) --CONSUMO*UNITARIOACQUISTO -- SENZA COMPONENTI -- modifica 30/5/2019 chiesta da Nicolò
				, FATTURATO_OSS_INT=e.CANONEMESE
				, RICAVOMESE_OSS_INT = e.TAGLIA*e.UNITARIOVENDITAPACCHETTO  
					--MODIFICATO 23/04
					-- PER L'INTEGRATO IL RICAVO è COMPRENSIVO DI COMPONENTI, MENTRE PER LO SCIOLTO NO
				, DIFFERENZEPOSITIVE_OSS_INT= CASE WHEN e.TAGLIA-e.CONSUMO>0 THEN  e.TAGLIA-e.CONSUMO ELSE 0 END 
				, DIFFERENZENEGATIVE_OSS_INT=CASE WHEN e.TAGLIA-e.CONSUMO<0 THEN  e.TAGLIA-e.CONSUMO ELSE 0 END 
				, MOVIMENTAZCONTOPOS_INT_OSS=CASE WHEN e.TAGLIA-e.CONSUMO>0 THEN  (e.TAGLIA-e.CONSUMO)*e.UNITARIOPM ELSE 0 END 
				, MOVIMENTAZCONTONEG_INT_OSS=CASE WHEN e.TAGLIA-e.CONSUMO<0 THEN  (e.TAGLIA-e.CONSUMO)*e.UNITARIOPS ELSE 0 END 
				, MOVIMENTAZIONICONTO_INT_OSS= case when e.taglia-e.consumo<0 then (e.taglia-e.consumo) * e.unitarioPS else (e.taglia - e.consumo) * e.UNITARIOPM end -- (e.TAGLIA-e.CONSUMO)*e.UNITARIOPM
				, VOLUMEFINALE_OSS_INT=e.CONSUMO
				, BONUSINIZIALESALDATI=e.BONUSINIZIALE
				, CR_POSITIVO_INT_OSS = SUM(CASE WHEN e.TAGLIA-e.CONSUMO>=0 THEN (e.TAGLIA-e.CONSUMO)*e.UNITARIOPM ELSE 0 END ) OVER (PARTITION BY UTENZA, ANNOMESEATTIVAZIONE, IDCONTRATTOFIGLIO, ANNO ORDER BY CALENDARIO ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
				, CR_NEGATIVO_INT_OSS = SUM(CASE WHEN e.TAGLIA-e.CONSUMO<0 THEN  (e.TAGLIA-e.CONSUMO)*e.UNITARIOPS ELSE 0 END ) OVER (PARTITION BY UTENZA, ANNOMESEATTIVAZIONE, IDCONTRATTOFIGLIO, ANNO ORDER BY CALENDARIO ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
		INTO FRC_IMPORT_E
		FROM IMPORT_E e
		left join FRC_WT_DIM_LISTINI l 
			on e.idListAcq = l.ID_LISTINO collate Latin1_General_CI_AS
				and e.SERVIZIO = l.SERVIZIO
		option (MAXDOP 0)
		;



		WITH IMPORT_G AS (
		SELECT	SERVIZIO = 'G'
				, CANALE = DD.CANALEVENDITA 
				, TIPOCLIENTE = CASE WHEN DD.CANALEVENDITA='CAMPAGNA NAZIONALE' AND DD.TIPOCLIENTECLUSTER='CONSUMER' THEN 'CAMPAGNA NAZIONALE - CONSUMER' 
			ELSE DD.TIPOCLIENTECLUSTER END
				, MESE = CONVERT(DATE,CONVERT(VARCHAR(7), DD.DATASTIPULA, 112)  + '-01')
				, ANNO= DATEDIFF (MONTH, DATAINIZIOPRELIEVO,KEYDATA)/12 + 1
				, A.IDCONTRATTOPADRE
				, IDCONTRATTOFIGLIO = A.IDCONTRATTO
				, SOTTOTIPOCONTRATTO = ISNULL(DD.CODICESOTTOTIPOCONTRATTO,@STRINGA_LISTINO_O_SOTTOTIPO_ASSENTE)
				, A.IDCLIENTE
				, case 
					when dd.tipoClienteCluster like 'SCIOLTO%' 
					then ISNULL(CAST(IDLISTVEN AS VARCHAR(50)), @LIST_FITT_VEN_G)
					else CAST(IDLISTVEN AS VARCHAR(50))
				end IDLISTVEN
				, case 
					when dd.tipoClienteCluster like 'SCIOLTO%' 
					then ISNULL(CAST(IDLISTACQ AS VARCHAR(50)), 'LIST_FITTIZIO')
					else CAST(IDLISTACQ AS VARCHAR(50))
				end IDLISTACQ
				, ANNOMESEATTIVAZIONE = CONVERT(DATE, CONVERT(VARCHAR(6), DATAINIZIOPRELIEVO, 112 ) + '01')
				, CALENDARIO = KEYDATA
				, MESEDICONSUMO = MONTH(KEYDATA)
				, UTENZA = A.PDR 
				, CONSUMO = QUANTITA --CASE WHEN A.SERVIZIO = 'A' THEN TAGLIA ELSE CONSUMO END
				, SALDOULTIMOMESE = NULL
				, BONUSINIZIALE= CANONEATTUALE
				-- OLD , BONUSINIZIALE = NULL --BONUSDISATTIVAZIONE
				, MODALITAPAGAMENTO = ISNULL(MODALITAPAGAMENTO, 'BOLLETTINO')
				, MODALITASPEDIZIONEFATTURA = ISNULL(MODALITASPEDIZIONEFATTURA, 'CARTACEA')
				, CANONERAI = 0
				, FLAGTIPOPARCO = 'OSSERVATO'
				, ULTIMORECORDUTENZA
				, PRIMORECORDUTENZA
				, SALDOFATTURATO 
				, ISNULL(IdCurvaICO, -1) IDCURVA
				, DATAFINEPRELIEVO
				, CANONEMESE = CANONEATTUALE
				, SMS = 0 
				, MINUTI = 0
				, GB = 0
				, CONSUMODEFF1  =0
				, CONSUMODEFF2  = 0
				, CONSUMODEFF3  = 0
				, CONSUMORAMO_1 = 0
				, CONSUMORAMO_2  = 0
				, TAGLIA=ConsumoMeseAttuale
				, TAGLIARAMO_1 = NULL
				, TAGLIARAMO_2 = NULL
				, TAGLIAMINUTI=NULL
				, TAGLIASMS=NULL
				, TAGLIAGIGA=NULL
				, UNITARIOPS = PREZZOOLTRESOGLIA 
				, UNITARIOPM = PREZZOSOTTOSOGLIA
				, UNITARIOPM_RAMO1 =NULL 
				, UNITARIOPM_RAMO2  =NULL 
				, UNITARIOPS_RAMO1  =NULL 
				, UNITARIOPS_RAMO2  =NULL 
				, UNITARIOVENDITAPACCHETTO = ISNULL(CanoneAttuale,0)/(CASE WHEN CONSUMOMESEATTUALE=0 THEN 1 ELSE CONSUMOMESEATTUALE END )
				, UNITARIOACQUISTO = ISNULL(QUANTITA*CostoMateriaPrimaAcquisto, 0) / (CASE WHEN QUANTITA= 0 THEN 1 ELSE QUANTITA END)
				, VOLUMEPERSO= case when UltimorecordUtenza=1 then StimaConsumoAnnuo else null end
				, STIMACONSUMOANNUO_PARCO_OSS=STIMACONSUMOANNUO_DACURVA
				, STIMAMINUTI_PARCO_OSS=0
				, STIMASMS_PARCO_OSS=0
				, STIMAGB_PARCO_OSS=0
		FROM   [DBO].[NEWMODEL_PARCOGAS] AS A
		LEFT JOIN   [DBO].[FRC_WT_DIM_BASECLICONTR] AS DD  ON DD.IDCONTRATTO = A.IDCONTRATTO
			LEFT JOIN #ClientiSaldo F ON F.idCLIENTE = A.IDCLIENTE AND F.calendario = KEYDATA
		
		WHERE FLAGINIZIOPREVISTO = 'ATTIVO'
			AND KEYDATA <= @DATAFINEOSSERVATO
			AND KEYDATA >= @DATAINIZIOOSSERVATO
		)

		SELECT 
			g.*,
			COSTOMESE_OSS_INT = g.CONSUMO * l.COSTO_MATERIA_PRIMA --CONSUMO*UNITARIOACQUISTO -- modifica 30/5, richiesta da Nicolò
			, FATTURATO_OSS_INT=g.CANONEMESE
			, RICAVOMESE_OSS_INT= CanoneMese -- g.TAGLIA*g.UNITARIOVENDITAPACCHETTO -- funzionalmente equivalenti
	--NON HA SENSO DISTINGUERE PER SCIOLTO SE TANTO è VALIDO SOLO PER L'INT
	--		,RICAVOMESE_OSS_INT = CASE WHEN TIPOCLIENTE LIKE '%SCIOLTO%' THEN CONSUMO * UNITARIOVENDITAPACCHETTO ELSE TAGLIA*UNITARIOVENDITAPACCHETTO END  
			--MODIFICATO 23/04
			, DIFFERENZEPOSITIVE_OSS_INT = CASE WHEN g.TAGLIA-g.CONSUMO>0 THEN  g.TAGLIA-g.CONSUMO ELSE 0 END 
			, DIFFERENZENEGATIVE_OSS_INT = CASE WHEN g.TAGLIA-g.CONSUMO<0 THEN  g.TAGLIA-g.CONSUMO ELSE 0 END 
			, MOVIMENTAZCONTOPOS_INT_OSS = CASE WHEN g.TAGLIA-g.CONSUMO>0 THEN  (g.TAGLIA-g.CONSUMO)*g.UNITARIOPM ELSE 0 END 
			, MOVIMENTAZCONTONEG_INT_OSS = CASE WHEN g.TAGLIA-g.CONSUMO<0 THEN  (g.TAGLIA-g.CONSUMO)*g.UNITARIOPS ELSE 0 END 
			, MOVIMENTAZIONICONTO_INT_OSS = case when g.taglia > g.consumo then (g.TAGLIA-g.CONSUMO)*g.UNITARIOPM else (g.taglia-g.consumo)*g.UNITARIOPS end
			, VOLUMEFINALE_OSS_INT = g.CONSUMO
			, BONUSINIZIALESALDATI = g.BONUSINIZIALE
			, CR_POSITIVO_INT_OSS = SUM(CASE WHEN G.TAGLIA-G.CONSUMO>=0 THEN  (G.TAGLIA-G.CONSUMO)*G.UNITARIOPM ELSE 0 END ) OVER (PARTITION BY UTENZA, ANNOMESEATTIVAZIONE, IDCONTRATTOFIGLIO, ANNO ORDER BY CALENDARIO ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
			, CR_NEGATIVO_INT_OSS = SUM(CASE WHEN G.TAGLIA-G.CONSUMO<0 THEN  (G.TAGLIA-G.CONSUMO)*G.UNITARIOPS ELSE 0 END ) OVER (PARTITION BY UTENZA, ANNOMESEATTIVAZIONE, IDCONTRATTOFIGLIO, ANNO ORDER BY CALENDARIO ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
		INTO FRC_IMPORT_G
		FROM IMPORT_G  g
		left join FRC_WT_DIM_LISTINI l 
			on g.idListAcq = l.ID_LISTINO collate Latin1_General_CI_AS
			and g.SERVIZIO = l.SERVIZIO
		option (MAXDOP 0);
	
		

		WITH IMPORT_M AS(
		SELECT  SERVIZIO = 'M'
				, CANALE = DD.CANALEVENDITA
				, TIPOCLIENTE = CASE WHEN DD.CANALEVENDITA='CAMPAGNA NAZIONALE' AND DD.TIPOCLIENTECLUSTER='CONSUMER' THEN 'CAMPAGNA NAZIONALE - CONSUMER' 
			ELSE DD.TIPOCLIENTECLUSTER END
				, MESE = CONVERT(DATE,CONVERT(VARCHAR(7), DD.DATASTIPULA, 112)  + '-01')
				, ANNO= DATEDIFF (MONTH, DATAINIZIO, KEYDATA)/12 + 1
				, A.IDCONTRATTOPADRE
				, IDCONTRATTOFIGLIO = A.IDCONTRATTO
				, SOTTOTIPOCONTRATTO = ISNULL(A.NOMETARIFFA,@STRINGA_LISTINO_O_SOTTOTIPO_ASSENTE)
				, A.IDCLIENTE
				, IDLISTVEN = @STRINGA_LISTINO_O_SOTTOTIPO_ASSENTE
				, IDLISTACQ = 'LIST_FITTIZIO'
				, ANNOMESEATTIVAZIONE = CONVERT(DATE, CONVERT(VARCHAR(6), DATAINIZIO, 112 ) + '01')
				, CALENDARIO = KEYDATA
				, MESEDICONSUMO = MONTH(KEYDATA)
				, UTENZA 
				, CONSUMO = NULL
				, SALDOULTIMOMESE = NULL
				, BONUSINIZIALE = NULL --BONUSDISATTIVAZIONE
				, MODALITAPAGAMENTO = ISNULL(MODALITAPAGAMENTO, 'BOLLETTINO')
				, MODALITASPEDIZIONEFATTURA = ISNULL(MODALITASPEDIZIONEFATTURA, 'CARTACEA')
				, CANONERAI = 0
				, FLAGTIPOPARCO = 'OSSERVATO'
				, ULTIMORECORDUTENZA
				, PRIMORECORDUTENZA
				, SALDOFATTURATO
				, IDCURVA = 1  -- DEFAULT COME DA MAIL 
				, DATAFINEPRELIEVO = DATAFINE
				, CANONEMESE = CANONEMOBILE
				, SMS = SMSMESE 
				, MINUTI = MINUTIMESE
				, GB = MBMESE / 1024
				, CONSUMODEFF1 = 0 
				, CONSUMODEFF2 = 0
				, CONSUMODEFF3 = 0
				, CONSUMORAMO_1 = 0
				, CONSUMORAMO_2 = 0
				, TAGLIA= NULL
				, TAGLIARAMO_1 = NULL
				, TAGLIARAMO_2 = NULL
				, TAGLIAMINUTI=case when TAGLIAMINUTI <> 'FLAT' then cast(TAGLIAMINUTI as float) else NULL end
				, TAGLIASMS =case when TAGLIASMS <> 'FLAT' then cast(TAGLIASMS as float) else NULL end
				, TAGLIAGIGA=case when TAGLIAGIGA <> 'FLAT' then cast(TAGLIAGIGA as float) else NULL end
				, UNITARIOPS = NULL 
				, UNITARIOPM = NULL
				, UNITARIOPM_RAMO1 =NULL 
				, UNITARIOPM_RAMO2  =NULL 
				, UNITARIOPS_RAMO1  =NULL 
				, UNITARIOPS_RAMO2  =NULL 
				, UNITARIOVENDITAPACCHETTO =ROINTMOBILE.VENDITAEURO 
				, UNITARIOACQUISTO =@UNITARIOACQUISTOMOBILE
				, VOLUMEPERSO=NULL
				, STIMACONSUMOANNUO_PARCO_OSS=0
				
			FROM NEWMODEL_PARCOMOBILE A
			LEFT JOIN   [DBO].[FRC_WT_DIM_BASECLICONTR] AS DD  ON DD.IDCONTRATTO = A.IDCONTRATTO
			LEFT JOIN #ClientiSaldo F ON F.idCLIENTE = A.IDCLIENTE AND F.calendario = KEYDATA
			LEFT JOIN     [DBO].[FRC_WT_DIM_ROINT_MOBILE] ROINTMOBILE
			ON UPPER(ROINTMOBILE.PM_NOME COLLATE LATIN1_GENERAL_CI_AS) = UPPER(A.NOMETARIFFA)
			WHERE KEYDATA <= @DATAFINEOSSERVATO
			AND KEYDATA>=@DATAINIZIOOSSERVATO)


			SELECT 
				IMPORT_M.*
				, STIMAMINUTI_PARCO_OSS=(CASE WHEN (PERC_CONSUMO_F1)<>0 THEN  IMPORT_M.MINUTI/(PERC_CONSUMO_F1) ELSE 0 END)
				, STIMASMS_PARCO_OSS=(CASE WHEN (PERC_CONSUMO_F2)<>0 THEN  IMPORT_M.SMS/(PERC_CONSUMO_F2) ELSE 0 END)
				, STIMAGB_PARCO_OSS=(CASE WHEN (PERC_CONSUMO_F3)<>0 THEN  IMPORT_M.GB/(PERC_CONSUMO_F3)	ELSE 0 END)
				, COSTOMESE_OSS_INT = UNITARIOACQUISTO
				, FATTURATO_OSS_INT=0
				, RICAVOMESE_OSS_INT =UNITARIOVENDITAPACCHETTO
				, DIFFERENZEPOSITIVE_OSS_INT=0
				, DIFFERENZENEGATIVE_OSS_INT=0
				, MOVIMENTAZCONTOPOS_INT_OSS=0
				, MOVIMENTAZCONTONEG_INT_OSS=0
				, MOVIMENTAZIONICONTO_INT_OSS=0
				, VOLUMEFINALE_OSS_INT=0
				, BONUSINIZIALESALDATI=BONUSINIZIALE
				, CR_POSITIVO_INT_OSS = SUM(CASE WHEN IMPORT_M.TAGLIA-IMPORT_M.CONSUMO>=0 THEN  (IMPORT_M.TAGLIA-IMPORT_M.CONSUMO)*IMPORT_M.UNITARIOPM ELSE 0 END ) OVER (PARTITION BY UTENZA, ANNOMESEATTIVAZIONE, IDCONTRATTOFIGLIO, ANNO ORDER BY CALENDARIO ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
				, CR_NEGATIVO_INT_OSS = SUM(CASE WHEN IMPORT_M.TAGLIA-IMPORT_M.CONSUMO<0 THEN  (IMPORT_M.TAGLIA-IMPORT_M.CONSUMO)*IMPORT_M.UNITARIOPS ELSE 0 END ) OVER (PARTITION BY UTENZA, ANNOMESEATTIVAZIONE, IDCONTRATTOFIGLIO, ANNO ORDER BY CALENDARIO ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
			INTO FRC_IMPORT_M
			FROM IMPORT_M 
			LEFT JOIN FRC_WT_DIM_CURVECOMPORTAMENTO CURVECONSUMO
			ON IMPORT_M.IDCURVA=CURVECONSUMO.IDCURVA
			AND IMPORT_M.SERVIZIO=CURVECONSUMO.SERVIZIO
			AND IMPORT_M.MESEDICONSUMO=CURVECONSUMO.MESEDICONSUMO
			option (MAXDOP 0)
		;
END
GO



ALTER PROCEDURE [DBO].[FRC_P_AGGREGAZIONE_PARCO]
AS
	BEGIN

		--TRUNCATE TABLE FRC_PARCO_OSSERVATO_AGGREGATO;
		DROP TABLE FRC_PARCO_OSSERVATO_AGGREGATO;
		-- AGGREGA AL LIVELLO DESIDERATO E EFFETTUA ALCUNI CONTEGGI
		--INSERT INTO FRC_PARCO_OSSERVATO_AGGREGATO
			SELECT
						CALENDARIO
						, ANNOMESEATTIVAZIONE
						, I.SERVIZIO
						, MESE
						, I.TIPOCLIENTE
						--,CASE WHEN I.CANALE='CAMPAGNA NAZIONALE' AND I.TIPOCLIENTE='CONSUMER' THEN 'CAMPAGNA NAZIONALE - CONSUMER' ELSE I.TIPOCLIENTE END TIPOCLIENTE
						, I.CANALE
						, SOTTOTIPOCONTRATTO COLLATE LATIN1_GENERAL_CI_AS SOTTOTIPOCONTRATTO
						, IDLISTVEN COLLATE LATIN1_GENERAL_CI_AS IDLISTVEN
						, IDLISTACQ COLLATE LATIN1_GENERAL_CI_AS IDLISTACQ
						, IDCURVA
						, COUNT(DISTINCT IDCLIENTE) NUMEROCLIENTI
						, COUNT(DISTINCT UTENZA) NUMEROUTENZE
						, NUMEROUTENZEPERSE = COUNT (DISTINCT (CASE WHEN ULTIMORECORDUTENZA=1 THEN UTENZA ELSE NULL END))
						, NUMEROCLIENTIPERSI = COUNT (DISTINCT (CASE WHEN ULTIMORECORDUTENZA=1 THEN IDCLIENTE ELSE NULL END))
						, NUMEROUTENZENUOVE = COUNT (DISTINCT (CASE WHEN PRIMORECORDUTENZA=1 THEN UTENZA ELSE NULL END))
						, NUMEROCLIENTINUOVI = COUNT (DISTINCT (CASE WHEN PRIMORECORDUTENZA=1 THEN IDCLIENTE ELSE NULL END))
						, NUMCONTRATTI = COUNT(DISTINCT IDCONTRATTOPADRE)
						, NUMCONTRATTINUOVI = COUNT(DISTINCT (CASE WHEN ANNOMESEATTIVAZIONE = CALENDARIO THEN IDCONTRATTOPADRE ELSE NULL END))
						, NUMCONTRATTIPERSI = COUNT(DISTINCT (CASE WHEN ANNOMESEATTIVAZIONE = DATAFINEPRELIEVO THEN IDCONTRATTOPADRE ELSE NULL END))
						, NUMCONTRATTIPERSIMOBILE = 0
						, NUMCONTRATTINOMOBILE = COUNT(DISTINCT IDCONTRATTOPADRE)
						,'OSSERVATO' TIPOPARCO
						, FE = CAST(CAST(COUNT(DISTINCT (CASE WHEN MODALITASPEDIZIONEFATTURA = 'ELETTRONICA' THEN IDCLIENTE ELSE NULL END))AS FLOAT)/ COUNT(DISTINCT IDCLIENTE) AS FLOAT)
						, SDD = 1.0*COUNT(DISTINCT (CASE WHEN MODALITAPAGAMENTO LIKE '%SDD%' THEN IDCLIENTE ELSE NULL END))/COUNT(DISTINCT IDCLIENTE)
						, CANONEMESE = SUM(isnull(CANONEMESE,0))
						, MINUTI = SUM(isnull(MINUTI,0))
						, SMS = SUM(isnull(SMS,0))
						, GB = SUM(isnull(GB,0))
						, CONSUMOMESE = SUM(isnull(CONSUMO,0))
						, CONSUMODEFF1 = SUM(isnull(CONSUMODEFF1,0))
						, CONSUMODEFF2 = SUM(isnull(CONSUMODEFF2,0))
						, CONSUMODEFF3 = SUM(isnull(CONSUMODEFF3,0))
						, CONSUMORAMO_1 = SUM(isnull(CONSUMORAMO_1,0))
						, CONSUMORAMO_2 = SUM(isnull(CONSUMORAMO_2,0))
						, NUMD2 = 0
						, TAGLIAMESE = SUM(isnull(TAGLIA,0))
						-- TAGLIAMESE MEDIA PER VOCE E ADSL 
						--, TAGLIAMESE_AVG=CASE WHEN SERVIZIO='V' THEN AVG(ISNULL(TAGLIARAMO_1,0) + ISNULL(TAGLIARAMO_2,0)) ELSE AVG(ISNULL(TAGLIA,0)) END 
						, TAGLIAMESE_AVG = case when servizio='V' then sum(isnull(tagliaramo_1,0) + isnull(tagliaramo_2,0))/count(distinct utenza) else avg(isnull(taglia,0)) end
						, TAGLIARAMO_1 = SUM(isnull(TAGLIARAMO_1,0))
						, TAGLIARAMO_2 = SUM(isnull(TAGLIARAMO_2,0))
						, TAGLIAMINUTI= SUM(isnull(TAGLIAMINUTI,0))
						, TAGLIASMS= SUM(isnull(TAGLIASMS,0))
						, TAGLIAGIGA= SUM(isnull(TAGLIAGIGA,0))
						, UNITARIOPS = isnull(AVG(UNITARIOPS),0)
						, UNITARIOPM = isnull(AVG(UNITARIOPM),0) 
						, UNITARIOPM_RAMO1 = isnull(AVG(UNITARIOPM_RAMO1),0)
						, UNITARIOPM_RAMO2 = isnull(AVG(UNITARIOPM_RAMO2),0)
						, UNITARIOPS_RAMO1 = isnull(AVG(UNITARIOPS_RAMO1),0)
						, UNITARIOPS_RAMO2 = isnull(AVG(UNITARIOPS_RAMO2),0)
						, UNITARIOVENDITAPACCHETTO = 1.0*SUM(CANONEMESE) / sum(CASE WHEN CASE WHEN TAGLIA IS NULL AND SERVIZIO = 'V' THEN 1 ELSE TAGLIA END = 0 THEN 1 ELSE CASE WHEN TAGLIA IS NULL AND SERVIZIO = 'V' THEN 1 ELSE TAGLIA END END)  --isnull(AVG(UNITARIOVENDITAPACCHETTO),0)
						, UNITARIOACQUISTO = isnull(AVG(UNITARIOACQUISTO),0)
						, COSTOMESE_OSS_INT=SUM(isnull(COSTOMESE_OSS_INT,0))
						, FATTURATO_OSS_INT=SUM(isnull(FATTURATO_OSS_INT,0))
						, VOLUMEPERSO_OSS_INT_SC=SUM(isnull(VOLUMEPERSO,0))
						, RICAVOMESE_OSS_INT =SUM(isnull(RICAVOMESE_OSS_INT,0))
						, BONUSINIZIALE = 0 --SUM(isnull(BONUSINIZIALE,0))
						, BONUSINIZIALESALDATI = 0 --SUM(case when ultimorecordUtenza = 1 then isnull(BONUSINIZIALE,0) else 0 end)
						, DIFFERENZEPOSITIVE_OSS_INT=SUM(isnull(DIFFERENZEPOSITIVE_OSS_INT,0))
						, DIFFERENZENEGATIVE_OSS_INT=SUM(isnull(DIFFERENZENEGATIVE_OSS_INT,0))
						, MOVIMENTAZCONTOPOS_INT_OSS=SUM(isnull(MOVIMENTAZCONTOPOS_INT_OSS,0))
						, MOVIMENTAZCONTONEG_INT_OSS=SUM(isnull(MOVIMENTAZCONTONEG_INT_OSS,0))
						, MOVIMENTAZIONICONTO_INT_OSS=SUM(isnull(MOVIMENTAZIONICONTO_INT_OSS,0))
						, VOLUMEFINALE_OSS_INT=SUM(isnull(VOLUMEFINALE_OSS_INT,0))
						, VOLUMEVENDITA_OSS_INT= case when servizio = 'A' then SUM(isnull(taglia, 0)) else SUM(isnull(tagliaramo_1, consumoramo_1) + ISNULL(tagliaramo_2, consumoramo_2)) end  --CASE WHEN SERVIZIO='A' THEN SUM(isnull(TAGLIA,0))---* COUNT(DISTINCT UTENZA)
						--ELSE  SUM(isnull(TAGLIARAMO_1,0)+isnull(TAGLIARAMO_2,0)) END 
						, CLIENTISALDATI_OSS_INT=Case when calendario <> annomeseattivazione and month(calendario) = month(annoMeseAttivazione) then COUNT(DISTINCT IDCLIENTE) else 0 end
						, RESIDENTI=0
						, isnull(AVG(STIMACONSUMOANNUO_PARCO_OSS),0) STIMACONSUMOANNUO_PARCO_OSS
						, isnull(AVG(STIMAMINUTI_PARCO_OSS),0) STIMAMINUTI_PARCO_OSS
						, isnull(AVG(STIMASMS_PARCO_OSS),0) STIMASMS_PARCO_OSS
						, isnull(AVG(STIMAGB_PARCO_OSS),0) STIMAGB_PARCO_OSS
						, isnull(AVG(STIMACONSUMOANNUO_PARCO_OSS),0)*COUNT(DISTINCT UTENZA)  STIMACONSUMOANNUO_PARCO_OSS_TOT
						, isnull(AVG(STIMAMINUTI_PARCO_OSS),0)*COUNT(DISTINCT UTENZA)  STIMAMINUTI_PARCO_OSS_TOT
						, isnull(AVG(STIMASMS_PARCO_OSS),0)*COUNT(DISTINCT UTENZA)  STIMASMS_PARCO_OSS_TOT
						, isnull(AVG(STIMAGB_PARCO_OSS),0)*COUNT(DISTINCT UTENZA)  STIMAGB_PARCO_OSS_TOT
						, isnull(AVG(TAGLIARAMO_1),0) TAGLIARAMO1_AVG
						, isnull(AVG(TAGLIARAMO_2),0) TAGLIARAMO2_AVG
						, SALDOFATTURATO=SUM(isnull(SALDOFATTURATO,0)) 
						, CR_POSITIVO_INT_OSS = SUM(CASE WHEN ULTIMORECORDUTENZA<>1 THEN ISNULL(CR_POSITIVO_INT_OSS,0) ELSE 0 END)
						, CR_NEGATIVO_INT_OSS = SUM(CASE WHEN ULTIMORECORDUTENZA<>1 THEN ISNULL(CR_NEGATIVO_INT_OSS,0) ELSE 0 END)
						, CR_POSITIVO_STORNATO_INT_OSS = SUM(CASE WHEN ULTIMORECORDUTENZA=1 and ( DATEDIFF(month, ANNOMESEATTIVAZIONE, CALENDARIO) % 12 ) <> 11 THEN ISNULL(CR_POSITIVO_INT_OSS,0) ELSE 0 END)
						, CR_NEGATIVO_STORNATO_INT_OSS = SUM(CASE WHEN ULTIMORECORDUTENZA=1 and ( DATEDIFF(month, ANNOMESEATTIVAZIONE, CALENDARIO) % 12 ) <> 11 THEN ISNULL(CR_NEGATIVO_INT_OSS,0) ELSE 0 END)
		
			INTO FRC_PARCO_OSSERVATO_AGGREGATO
			FROM   [DBO].[FRC_IMPORT_AV] I
			GROUP BY CALENDARIO, MESE, 
					I.SERVIZIO, I.TIPOCLIENTE, I.CANALE, SOTTOTIPOCONTRATTO, 
					IDLISTVEN, IDLISTACQ, ANNOMESEATTIVAZIONE, IDCURVA

			UNION ALL

			
			SELECT 
						CALENDARIO
						, ANNOMESEATTIVAZIONE
						, I.SERVIZIO
						, MESE
						, I.TIPOCLIENTE
						--,CASE WHEN I.CANALE='CAMPAGNA NAZIONALE' AND I.TIPOCLIENTE='CONSUMER' THEN 'CAMPAGNA NAZIONALE - CONSUMER' ELSE I.TIPOCLIENTE END TIPOCLIENTE
						, I.CANALE
						, SOTTOTIPOCONTRATTO COLLATE LATIN1_GENERAL_CI_AS SOTTOTIPOCONTRATTO
						, IDLISTVEN COLLATE LATIN1_GENERAL_CI_AS IDLISTVEN
						, IDLISTACQ COLLATE LATIN1_GENERAL_CI_AS IDLISTACQ
						, IDCURVA
						, COUNT(DISTINCT IDCLIENTE) NUMEROCLIENTI
						, COUNT(DISTINCT UTENZA) NUMEROUTENZE
						, NUMEROUTENZEPERSE = COUNT (DISTINCT (CASE WHEN ULTIMORECORDUTENZA=1 THEN UTENZA ELSE NULL END))
						, NUMEROCLIENTIPERSI = COUNT (DISTINCT (CASE WHEN ULTIMORECORDUTENZA=1 THEN IDCLIENTE ELSE NULL END))
						, NUMEROUTENZENUOVE = COUNT (DISTINCT (CASE WHEN PRIMORECORDUTENZA=1 THEN UTENZA ELSE NULL END))
						, NUMEROCLIENTINUOVI = COUNT (DISTINCT (CASE WHEN PRIMORECORDUTENZA=1 THEN IDCLIENTE ELSE NULL END))
						, NUMCONTRATTI = COUNT(DISTINCT IDCONTRATTOPADRE)
						, NUMCONTRATTINUOVI = COUNT(DISTINCT (CASE WHEN ANNOMESEATTIVAZIONE = CALENDARIO THEN IDCONTRATTOPADRE ELSE NULL END))
						, NUMCONTRATTIPERSI = COUNT(DISTINCT (CASE WHEN ANNOMESEATTIVAZIONE = DATAFINEPRELIEVO THEN IDCONTRATTOPADRE ELSE NULL END))
						, NUMCONTRATTIPERSIMOBILE = 0
						, NUMCONTRATTINOMOBILE = COUNT(DISTINCT IDCONTRATTOPADRE)
						,'OSSERVATO' TIPOPARCO
						, FE = CAST(CAST(COUNT(DISTINCT (CASE WHEN MODALITASPEDIZIONEFATTURA = 'ELETTRONICA' THEN IDCLIENTE ELSE NULL END))AS FLOAT)/ COUNT(DISTINCT IDCLIENTE) AS FLOAT)
						, SDD = 1.0*COUNT(DISTINCT (CASE WHEN MODALITAPAGAMENTO LIKE '%SDD%' THEN IDCLIENTE ELSE NULL END))/COUNT(DISTINCT IDCLIENTE)
						, CANONEMESE = SUM(isnull(CANONEMESE,0))
						, MINUTI = SUM(isnull(MINUTI,0))
						, SMS = SUM(isnull(SMS,0))
						, GB = SUM(isnull(GB,0))
						, CONSUMOMESE = SUM(isnull(CONSUMO,0))
						, CONSUMODEFF1 = SUM(isnull(CONSUMODEFF1,0))
						, CONSUMODEFF2 = SUM(isnull(CONSUMODEFF2,0))
						, CONSUMODEFF3 = SUM(isnull(CONSUMODEFF3,0))
						, CONSUMORAMO_1 = SUM(isnull(CONSUMORAMO_1,0))
						, CONSUMORAMO_2 = SUM(isnull(CONSUMORAMO_2,0))
						, NUMD2 = SUM(isnull(FLAG_D2,0))
						, TAGLIAMESE = SUM(isnull(TAGLIA,0))
						, TAGLIAMESE_AVG= isnull(AVG(TAGLIA),0)
						, TAGLIARAMO_1 = SUM(isnull(TAGLIARAMO_1,0))
						, TAGLIARAMO_2 = SUM(isnull(TAGLIARAMO_2,0))
						, TAGLIAMINUTI= SUM(isnull(TAGLIAMINUTI,0))
						, TAGLIASMS= SUM(isnull(TAGLIASMS,0))
						, TAGLIAGIGA= SUM(isnull(TAGLIAGIGA,0))
						, UNITARIOPS = isnull(AVG(UNITARIOPS),0)
						, UNITARIOPM = isnull(AVG(UNITARIOPM),0) 
						, UNITARIOPM_RAMO1 = isnull(AVG(UNITARIOPM_RAMO1),0)
						, UNITARIOPM_RAMO2 = isnull(AVG(UNITARIOPM_RAMO2),0)  
						, UNITARIOPS_RAMO1 = isnull(AVG(UNITARIOPS_RAMO1),0)  
						, UNITARIOPS_RAMO2 = isnull(AVG(UNITARIOPS_RAMO2),0) 
						, UNITARIOVENDITAPACCHETTO = SUM(ISNULL(CANONEMESE,0))/SUM(case when taglia = 0 then 1 else ISNULL(TAGLIA,1) end) -- AVG(UNITARIOVENDITAPACCHETTO) -- richiesta nicolò 30/5/19
						, UNITARIOACQUISTO=isnull(AVG(UNITARIOACQUISTO),0)
						, COSTOMESE_OSS_INT=SUM(isnull(COSTOMESE_OSS_INT,0))
						, FATTURATO_OSS_INT=SUM(isnull(FATTURATO_OSS_INT,0))
						, VOLUMEPERSO_OSS_INT_SC=SUM(isnull(VOLUMEPERSO,0))
						, RICAVOMESE_OSS_INT =SUM(isnull(RICAVOMESE_OSS_INT,0))
						, BONUSINIZIALE=SUM(isnull(BONUSINIZIALE,0))
						, BONUSINIZIALESALDATI=SUM(case when ultimorecordUtenza <> 1 then isnull(BONUSINIZIALE,0) else 0 end)
						, DIFFERENZEPOSITIVE_OSS_INT=SUM(isnull(DIFFERENZEPOSITIVE_OSS_INT,0))
						, DIFFERENZENEGATIVE_OSS_INT=SUM(isnull(DIFFERENZENEGATIVE_OSS_INT,0))
						, MOVIMENTAZCONTOPOS_INT_OSS=SUM(isnull(MOVIMENTAZCONTOPOS_INT_OSS,0))
						, MOVIMENTAZCONTONEG_INT_OSS=SUM(isnull(MOVIMENTAZCONTONEG_INT_OSS,0))
						, MOVIMENTAZIONICONTO_INT_OSS=SUM(isnull(MOVIMENTAZIONICONTO_INT_OSS,0))
						, VOLUMEFINALE_OSS_INT=SUM(isnull(VOLUMEFINALE_OSS_INT,0))
						, VOLUMEVENDITA_OSS_INT=SUM(isnull(TAGLIA,0))---* COUNT(DISTINCT UTENZA)
						, CLIENTISALDATI_OSS_INT=Case when calendario <> annomeseattivazione and month(calendario) = month(annoMeseAttivazione) then COUNT(DISTINCT IDCLIENTE) else 0 end
						, RESIDENTI=CASE WHEN COUNT(DISTINCT IDCLIENTE)<>0 THEN  1.0*count (distinct case when isnull(FLAG_D2,0) = 1 then idcliente end)/COUNT(DISTINCT IDCLIENTE) ELSE 0 END 
						, isnull(AVG(STIMACONSUMOANNUO_PARCO_OSS),0) STIMACONSUMOANNUO_PARCO_OSS
						, isnull(AVG(STIMAMINUTI_PARCO_OSS),0) STIMAMINUTI_PARCO_OSS
						, isnull(AVG(STIMASMS_PARCO_OSS),0) STIMASMS_PARCO_OSS
						, isnull(AVG(STIMAGB_PARCO_OSS),0) STIMAGB_PARCO_OSS
						, SUM(isnull(STIMACONSUMOANNUO_PARCO_OSS,0)) STIMACONSUMOANNUO_PARCO_OSS_TOT
						, SUM(isnull(STIMAMINUTI_PARCO_OSS,0)) STIMAMINUTI_PARCO_OSS_TOT
						, SUM(isnull(STIMASMS_PARCO_OSS,0)) STIMASMS_PARCO_OSS_TOT
						, SUM(isnull(STIMAGB_PARCO_OSS,0)) STIMAGB_PARCO_OSS_TOT
						, isnull(AVG(TAGLIARAMO_1),0) TAGLIARAMO1_AVG
						, isnull(AVG(TAGLIARAMO_2),0) TAGLIARAMO2_AVG
						, SALDOFATTURATO=SUM(isnull(SALDOFATTURATO,0)) 
						, CR_POSITIVO_INT_OSS = SUM(CASE WHEN ULTIMORECORDUTENZA<>1 THEN ISNULL(CR_POSITIVO_INT_OSS,0) ELSE 0 END)
						, CR_NEGATIVO_INT_OSS = SUM(CASE WHEN ULTIMORECORDUTENZA<>1 THEN ISNULL(CR_NEGATIVO_INT_OSS,0) ELSE 0 END)
						, CR_POSITIVO_STORNATO_INT_OSS=SUM(CASE WHEN ULTIMORECORDUTENZA=1 and ( DATEDIFF(month, ANNOMESEATTIVAZIONE, CALENDARIO) % 12 ) <> 11 THEN ISNULL(CR_POSITIVO_INT_OSS,0) ELSE 0 END)
						, CR_NEGATIVO_STORNATO_INT_OSS=SUM(CASE WHEN ULTIMORECORDUTENZA=1 and ( DATEDIFF(month, ANNOMESEATTIVAZIONE, CALENDARIO) % 12 ) <> 11THEN ISNULL(CR_NEGATIVO_INT_OSS,0) ELSE 0 END)
			FROM   [DBO].[FRC_IMPORT_E] I
			GROUP BY CALENDARIO, MESE, 
					I.SERVIZIO, I.TIPOCLIENTE, I.CANALE, SOTTOTIPOCONTRATTO, 
					IDLISTVEN, IDLISTACQ, ANNOMESEATTIVAZIONE, IDCURVA

			UNION ALL

			
			SELECT 
						CALENDARIO
						, ANNOMESEATTIVAZIONE
						, I.SERVIZIO
						, MESE
						, I.TIPOCLIENTE
						--,CASE WHEN I.CANALE='CAMPAGNA NAZIONALE' AND I.TIPOCLIENTE='CONSUMER' THEN 'CAMPAGNA NAZIONALE - CONSUMER' ELSE I.TIPOCLIENTE END TIPOCLIENTE
						, I.CANALE  
						, SOTTOTIPOCONTRATTO COLLATE LATIN1_GENERAL_CI_AS SOTTOTIPOCONTRATTO
						, IDLISTVEN COLLATE LATIN1_GENERAL_CI_AS IDLISTVEN
						, IDLISTACQ COLLATE LATIN1_GENERAL_CI_AS IDLISTACQ
						, IDCURVA
						, COUNT(DISTINCT IDCLIENTE) NUMEROCLIENTI
						, COUNT(DISTINCT UTENZA) NUMEROUTENZE
						, NUMEROUTENZEPERSE = COUNT (DISTINCT (CASE WHEN ULTIMORECORDUTENZA=1 THEN UTENZA ELSE NULL END))
						, NUMEROCLIENTIPERSI = COUNT (DISTINCT (CASE WHEN ULTIMORECORDUTENZA=1 THEN IDCLIENTE ELSE NULL END))
						, NUMEROUTENZENUOVE = COUNT (DISTINCT (CASE WHEN PRIMORECORDUTENZA=1 THEN UTENZA ELSE NULL END))
						, NUMEROCLIENTINUOVI = COUNT (DISTINCT (CASE WHEN PRIMORECORDUTENZA=1 THEN IDCLIENTE ELSE NULL END))
						, NUMCONTRATTI = COUNT(DISTINCT IDCONTRATTOPADRE)
						, NUMCONTRATTINUOVI = COUNT(DISTINCT (CASE WHEN ANNOMESEATTIVAZIONE = CALENDARIO THEN IDCONTRATTOPADRE ELSE NULL END))
						, NUMCONTRATTIPERSI = COUNT(DISTINCT (CASE WHEN ANNOMESEATTIVAZIONE = DATAFINEPRELIEVO THEN IDCONTRATTOPADRE ELSE NULL END))
						, NUMCONTRATTIPERSIMOBILE = 0
						, NUMCONTRATTINOMOBILE = COUNT(DISTINCT IDCONTRATTOPADRE)
						,'OSSERVATO' TIPOPARCO
						, FE = CAST(CAST(COUNT(DISTINCT (CASE WHEN MODALITASPEDIZIONEFATTURA = 'ELETTRONICA' THEN IDCLIENTE ELSE NULL END))AS FLOAT)/ COUNT(DISTINCT IDCLIENTE) AS FLOAT)
						, SDD = 1.0*COUNT(DISTINCT (CASE WHEN MODALITAPAGAMENTO LIKE '%SDD%' THEN IDCLIENTE ELSE NULL END))/COUNT(DISTINCT IDCLIENTE)
						, CANONEMESE = SUM(isnull(CANONEMESE,0))
						, MINUTI = SUM(isnull(MINUTI,0))
						, SMS = SUM(isnull(SMS,0))
						, GB = SUM(isnull(GB,0))
						, CONSUMOMESE = SUM(isnull(CONSUMO,0))
						, CONSUMODEFF1 = SUM(isnull(CONSUMODEFF1,0))
						, CONSUMODEFF2 = SUM(isnull(CONSUMODEFF2,0))
						, CONSUMODEFF3 = SUM(isnull(CONSUMODEFF3,0))
						, CONSUMORAMO_1 = SUM(isnull(CONSUMORAMO_1,0))
						, CONSUMORAMO_2 = SUM(isnull(CONSUMORAMO_2,0))
						, NUMD2 = 0
						, TAGLIAMESE = SUM(isnull(TAGLIA,0))
						, TAGLIAMESE_AVG= isnull(AVG(TAGLIA),0)
						, TAGLIARAMO_1 = SUM(isnull(TAGLIARAMO_1,0))
						, TAGLIARAMO_2 = SUM(isnull(TAGLIARAMO_2,0))
						, TAGLIAMINUTI= SUM(isnull(TAGLIAMINUTI,0))
						, TAGLIASMS= SUM(isnull(TAGLIASMS,0))
						, TAGLIAGIGA= SUM(isnull(TAGLIAGIGA,0))
						, UNITARIOPS = isnull(AVG(UNITARIOPS),0) 
						, UNITARIOPM = isnull(AVG(UNITARIOPM),0)
						, UNITARIOPM_RAMO1 = isnull(AVG(UNITARIOPM_RAMO1),0) 
						, UNITARIOPM_RAMO2 = isnull(AVG(UNITARIOPM_RAMO2),0)
						, UNITARIOPS_RAMO1 = isnull(AVG(UNITARIOPS_RAMO1),0) 
						, UNITARIOPS_RAMO2 = isnull(AVG(UNITARIOPS_RAMO2),0) 
						, UNITARIOVENDITAPACCHETTO = SUM(ISNULL(CANONEMESE,0))/SUM(case when taglia = 0 then 1 else ISNULL(TAGLIA,1) end) --AVG(UNITARIOVENDITAPACCHETTO) -- richiesta nicolò 30/5/19
						, UNITARIOACQUISTO=isnull(AVG(UNITARIOACQUISTO),0)
						, COSTOMESE_OSS_INT=SUM(isnull(COSTOMESE_OSS_INT,0))
						, FATTURATO_OSS_INT=SUM(isnull(FATTURATO_OSS_INT,0))
						, VOLUMEPERSO_OSS_INT_SC=SUM(isnull(VOLUMEPERSO,0))
						, RICAVOMESE_OSS_INT =SUM(isnull(RICAVOMESE_OSS_INT,0))
						, BONUSINIZIALE=SUM(isnull(BONUSINIZIALE,0))
						, BONUSINIZIALESALDATI = SUM(case when ultimorecordUtenza <> 1 then isnull(BONUSINIZIALESALDATI,0) else 0 end)
						, DIFFERENZEPOSITIVE_OSS_INT=SUM(isnull(DIFFERENZEPOSITIVE_OSS_INT,0))
						, DIFFERENZENEGATIVE_OSS_INT=SUM(isnull(DIFFERENZENEGATIVE_OSS_INT,0))
						, MOVIMENTAZCONTOPOS_INT_OSS=SUM(isnull(MOVIMENTAZCONTOPOS_INT_OSS,0))
						, MOVIMENTAZCONTONEG_INT_OSS=SUM(isnull(MOVIMENTAZCONTONEG_INT_OSS,0))
						, MOVIMENTAZIONICONTO_INT_OSS=SUM(isnull(MOVIMENTAZIONICONTO_INT_OSS,0))
						, VOLUMEFINALE_OSS_INT=SUM(isnull(VOLUMEFINALE_OSS_INT,0))
						, VOLUMEVENDITA_OSS_INT =  SUM(isnull(TAGLIA,0))---* COUNT(DISTINCT UTENZA)  --29/05
						, CLIENTISALDATI_OSS_INT=Case when calendario <> annomeseattivazione and month(calendario) = month(annoMeseAttivazione) then COUNT(DISTINCT IDCLIENTE) else 0 end
						, RESIDENTI=0
						, isnull(AVG(STIMACONSUMOANNUO_PARCO_OSS),0) STIMACONSUMOANNUO_PARCO_OSS
						, isnull(AVG(STIMAMINUTI_PARCO_OSS),0) STIMAMINUTI_PARCO_OSS
						, isnull(AVG(STIMASMS_PARCO_OSS),0) STIMASMS_PARCO_OSS
						, isnull(AVG(STIMAGB_PARCO_OSS),0) STIMAGB_PARCO_OSS
						, SUM(STIMACONSUMOANNUO_PARCO_OSS) STIMACONSUMOANNUO_PARCO_OSS_TOT
						, SUM(STIMAMINUTI_PARCO_OSS) STIMAMINUTI_PARCO_OSS_TOT
						, SUM(STIMASMS_PARCO_OSS) STIMASMS_PARCO_OSS_TOT
						, SUM(STIMAGB_PARCO_OSS) STIMAGB_PARCO_OSS_TOT
						, isnull(AVG(TAGLIARAMO_1),0) TAGLIARAMO1_AVG
						, isnull(AVG(TAGLIARAMO_2),0) TAGLIARAMO2_AVG
						, SALDOFATTURATO=SUM(isnull(SALDOFATTURATO,0)) 
						, CR_POSITIVO_INT_OSS = SUM(CASE WHEN ULTIMORECORDUTENZA<>1 THEN ISNULL(CR_POSITIVO_INT_OSS,0) ELSE 0 END)
						, CR_NEGATIVO_INT_OSS = SUM(CASE WHEN ULTIMORECORDUTENZA<>1 THEN ISNULL(CR_NEGATIVO_INT_OSS,0) ELSE 0 END)
						, CR_POSITIVO_STORNATO_INT_OSS=SUM(CASE WHEN ULTIMORECORDUTENZA = 1 and ( DATEDIFF(month, ANNOMESEATTIVAZIONE, CALENDARIO) % 12 ) <> 11 THEN ISNULL(CR_POSITIVO_INT_OSS,0) ELSE 0 END)
						, CR_NEGATIVO_STORNATO_INT_OSS=SUM(CASE WHEN ULTIMORECORDUTENZA = 1 and ( DATEDIFF(month, ANNOMESEATTIVAZIONE, CALENDARIO) % 12 ) <> 11 THEN ISNULL(CR_NEGATIVO_INT_OSS,0) ELSE 0 END)
			FROM   [DBO].[FRC_IMPORT_G] I
			GROUP BY CALENDARIO, MESE, 
					I.SERVIZIO, I.TIPOCLIENTE, I.CANALE, SOTTOTIPOCONTRATTO, 
					IDLISTVEN, IDLISTACQ, ANNOMESEATTIVAZIONE, IDCURVA

			UNION ALL

			SELECT
						CALENDARIO
						, ANNOMESEATTIVAZIONE
						, I.SERVIZIO
						, MESE
						,I.TIPOCLIENTE
						--,CASE WHEN I.CANALE='CAMPAGNA NAZIONALE' AND I.TIPOCLIENTE='CONSUMER' THEN 'CAMPAGNA NAZIONALE - CONSUMER' ELSE I.TIPOCLIENTE END TIPOCLIENTE
						, I.CANALE
						, SOTTOTIPOCONTRATTO COLLATE LATIN1_GENERAL_CI_AS SOTTOTIPOCONTRATTO
						, IDLISTVEN COLLATE LATIN1_GENERAL_CI_AS IDLISTVEN
						, IDLISTACQ COLLATE LATIN1_GENERAL_CI_AS IDLISTACQ
						, IDCURVA
						, COUNT(DISTINCT IDCLIENTE) NUMEROCLIENTI
						, COUNT(DISTINCT UTENZA) NUMEROUTENZE
						, NUMEROUTENZEPERSE = COUNT (DISTINCT (CASE WHEN ULTIMORECORDUTENZA=1 THEN UTENZA ELSE NULL END))
						, NUMEROCLIENTIPERSI = COUNT (DISTINCT (CASE WHEN ULTIMORECORDUTENZA=1 THEN IDCLIENTE ELSE NULL END))
						, NUMEROUTENZENUOVE = COUNT (DISTINCT (CASE WHEN PRIMORECORDUTENZA=1 THEN UTENZA ELSE NULL END))
						, NUMEROCLIENTINUOVI = COUNT (DISTINCT (CASE WHEN PRIMORECORDUTENZA=1 THEN IDCLIENTE ELSE NULL END))
						, NUMCONTRATTI = COUNT(DISTINCT IDCONTRATTOPADRE)
						, NUMCONTRATTINUOVI = COUNT(DISTINCT (CASE WHEN ANNOMESEATTIVAZIONE = CALENDARIO THEN IDCONTRATTOPADRE ELSE NULL END))
						, NUMCONTRATTIPERSI = COUNT(DISTINCT (CASE WHEN ANNOMESEATTIVAZIONE = DATAFINEPRELIEVO THEN IDCONTRATTOPADRE ELSE NULL END))
						, NUMCONTRATTIPERSIMOBILE = COUNT(DISTINCT (CASE WHEN ANNOMESEATTIVAZIONE = DATAFINEPRELIEVO THEN IDCONTRATTOPADRE ELSE NULL END))
						, NUMCONTRATTINOMOBILE = 0
						,'OSSERVATO' TIPOPARCO
						, FE = CAST(CAST(COUNT(DISTINCT (CASE WHEN MODALITASPEDIZIONEFATTURA = 'ELETTRONICA' THEN IDCLIENTE ELSE NULL END))AS FLOAT)/ COUNT(DISTINCT IDCLIENTE) AS FLOAT)
						, SDD = 1.0*COUNT(DISTINCT (CASE WHEN MODALITAPAGAMENTO LIKE '%SDD%' THEN IDCLIENTE ELSE NULL END))/COUNT(DISTINCT IDCLIENTE)
						, CANONEMESE = SUM(isnull(CANONEMESE,0))
						, MINUTI = SUM(isnull(MINUTI,0))
						, SMS = SUM(isnull(SMS,0))
						, GB = SUM(isnull(GB,0))
						, CONSUMOMESE = SUM(isnull(CONSUMO,0))
						, CONSUMODEFF1 = SUM(isnull(CONSUMODEFF1,0))
						, CONSUMODEFF2 = SUM(isnull(CONSUMODEFF2,0))
						, CONSUMODEFF3 = SUM(isnull(CONSUMODEFF3,0))
						, CONSUMORAMO_1 = SUM(isnull(CONSUMORAMO_1,0))
						, CONSUMORAMO_2 = SUM(isnull(CONSUMORAMO_2,0))
						, NUMD2 = 0
						, TAGLIAMESE = SUM(isnull(TAGLIA,0))
						, TAGLIAMESE_AVG= isnull(AVG(TAGLIA),0)
						, TAGLIARAMO_1 = SUM(isnull(TAGLIARAMO_1,0))
						, TAGLIARAMO_2 = SUM(isnull(TAGLIARAMO_2,0))
						, TAGLIAMINUTI= SUM(isnull(TAGLIAMINUTI,0))
						, TAGLIASMS= SUM(isnull(TAGLIASMS,0))
						, TAGLIAGIGA= SUM(isnull(TAGLIAGIGA,0))
						, UNITARIOPS = isnull(AVG(UNITARIOPS),0) 
						, UNITARIOPM = isnull(AVG(UNITARIOPM),0) 
						, UNITARIOPM_RAMO1 =isnull(AVG(UNITARIOPM_RAMO1),0) 
						, UNITARIOPM_RAMO2 = isnull(AVG(UNITARIOPM_RAMO2),0)  
						, UNITARIOPS_RAMO1 = isnull(AVG(UNITARIOPS_RAMO1),0)  
						, UNITARIOPS_RAMO2 = isnull(AVG(UNITARIOPS_RAMO2),0) 
						, UNITARIOVENDITAPACCHETTO = isnull(AVG(UNITARIOVENDITAPACCHETTO),0)
						, UNITARIOACQUISTO=isnull(AVG(UNITARIOACQUISTO),0)
						, COSTOMESE_OSS_INT=isnull(AVG(UNITARIOACQUISTO),0)*COUNT(DISTINCT IDCLIENTE)
						, FATTURATO_OSS_INT=SUM(isnull(FATTURATO_OSS_INT,0))
						, VOLUMEPERSO_OSS_INT_SC=SUM(isnull(VOLUMEPERSO,0))
						, RICAVOMESE_OSS_INT =isnull(AVG(RICAVOMESE_OSS_INT),0)*COUNT(DISTINCT IDCLIENTE)
						, BONUSINIZIALE = 0 --SUM(isnull(BONUSINIZIALE,0))
						, BONUSINIZIALESALDATI = 0 --SUM(isnull(BONUSINIZIALESALDATI,0))
						, DIFFERENZEPOSITIVE_OSS_INT=SUM(isnull(DIFFERENZEPOSITIVE_OSS_INT,0))
						, DIFFERENZENEGATIVE_OSS_INT=SUM(isnull(DIFFERENZENEGATIVE_OSS_INT,0))
						, MOVIMENTAZCONTOPOS_INT_OSS=SUM(isnull(MOVIMENTAZCONTOPOS_INT_OSS,0))
						, MOVIMENTAZCONTONEG_INT_OSS=SUM(isnull(MOVIMENTAZCONTONEG_INT_OSS,0))
						, MOVIMENTAZIONICONTO_INT_OSS=SUM(isnull(MOVIMENTAZIONICONTO_INT_OSS,0))
						, VOLUMEFINALE_OSS_INT=count(distinct UTENZA) -- = numero utenze /mail di Nicolò 6/8/2019
						, VOLUMEVENDITA_OSS_INT=0
						, CLIENTISALDATI_OSS_INT=Case when calendario <> annomeseattivazione and month(calendario) = month(annoMeseAttivazione) then COUNT(DISTINCT IDCLIENTE) else 0 end
						, RESIDENTI=0
						, isnull(AVG(STIMACONSUMOANNUO_PARCO_OSS),0) STIMACONSUMOANNUO_PARCO_OSS
						, isnull(AVG(STIMAMINUTI_PARCO_OSS),0) STIMAMINUTI_PARCO_OSS
						, isnull(AVG(STIMASMS_PARCO_OSS),0) STIMASMS_PARCO_OSS
						, isnull(AVG(STIMAGB_PARCO_OSS),0) STIMAGB_PARCO_OSS
						, isnull(AVG(STIMACONSUMOANNUO_PARCO_OSS),0)*COUNT(DISTINCT UTENZA) STIMACONSUMOANNUO_PARCO_OSS_TOT
						, isnull(AVG(STIMAMINUTI_PARCO_OSS),0)*COUNT(DISTINCT UTENZA)  STIMAMINUTI_PARCO_OSS_TOT
						, isnull(AVG(STIMASMS_PARCO_OSS),0)*COUNT(DISTINCT UTENZA)  STIMASMS_PARCO_OSS_TOT
						, isnull(AVG(STIMAGB_PARCO_OSS),0)*COUNT(DISTINCT UTENZA) STIMAGB_PARCO_OSS_TOT
						, isnull(AVG(TAGLIARAMO_1),0) TAGLIARAMO1_AVG
						, isnull(AVG(TAGLIARAMO_2),0) TAGLIARAMO2_AVG
						, SALDOFATTURATO=SUM(isnull(SALDOFATTURATO,0)) 
						, CR_POSITIVO_INT_OSS = SUM(CASE WHEN ULTIMORECORDUTENZA<>1 THEN ISNULL(CR_POSITIVO_INT_OSS,0) ELSE 0 END)
						, CR_NEGATIVO_INT_OSS = SUM(CASE WHEN ULTIMORECORDUTENZA<>1 THEN ISNULL(CR_NEGATIVO_INT_OSS,0) ELSE 0 END)
						, CR_POSITIVO_STORNATO_INT_OSS = SUM(CASE WHEN ULTIMORECORDUTENZA = 1 and ( DATEDIFF(month, ANNOMESEATTIVAZIONE, CALENDARIO) % 12 ) <> 11 THEN ISNULL(CR_POSITIVO_INT_OSS,0) ELSE 0 END)
						, CR_NEGATIVO_STORNATO_INT_OSS = SUM(CASE WHEN ULTIMORECORDUTENZA = 1 and ( DATEDIFF(month, ANNOMESEATTIVAZIONE, CALENDARIO) % 12 ) <> 11 THEN ISNULL(CR_NEGATIVO_INT_OSS,0) ELSE 0 END)
			FROM   [DBO].[FRC_IMPORT_M] I
			GROUP BY CALENDARIO, MESE, 
					I.SERVIZIO, I.TIPOCLIENTE, I.CANALE, SOTTOTIPOCONTRATTO, 
					IDLISTVEN, IDLISTACQ, ANNOMESEATTIVAZIONE, IDCURVA
			OPTION(HASH GROUP, MAXDOP 0, HASH UNION)

		;
		
	IF OBJECT_ID('FRC_IMPORT_E', 'U') IS NOT NULL
		DROP TABLE FRC_IMPORT_E;

	IF OBJECT_ID('FRC_IMPORT_G', 'U') IS NOT NULL
		DROP TABLE FRC_IMPORT_G;

	IF OBJECT_ID('FRC_IMPORT_AV', 'U') IS NOT NULL
		DROP TABLE FRC_IMPORT_AV;

	IF OBJECT_ID('FRC_IMPORT_M', 'U') IS NOT NULL
		DROP TABLE FRC_IMPORT_M;


	END
GO


ALTER PROCEDURE [DBO].[FRC_P_REPLICA_PARCO]
AS

IF OBJECT_ID('TEMPDB..##RO_FASCIZZATO', 'U') IS NOT NULL
	DROP TABLE ##RO_FASCIZZATO;
	IF OBJECT_ID('TEMPDB..##ANNO_MAX', 'U') IS NOT NULL
	DROP TABLE ##ANNO_MAX;
	
	IF OBJECT_ID('TEMPDB..##FRC_EXPLODED', 'U') IS NOT NULL
	DROP TABLE ##FRC_EXPLODED;

	DECLARE @DATAFINEOSSERVATO DATE
	-- DOBBIAMO REPLICARE SOLO L'ULTIMO MESE IN TUTTO L'INTERVALLO DI SIMULAZIONE
	BEGIN
		SET @DATAFINEOSSERVATO = (SELECT CONVERT(DATE, PARAMETRO_VALORE, 112) FROM FRC_PARAMETRI WHERE PARAMETRO_NOME = 'DATA FINE OSSERVATO');
			
	
	WITH INTERVALLOSIMULAZIONE AS (
		SELECT KEYDATA
		FROM DIM_DATA 
		WHERE KEYDATA>(SELECT PARAMETRO_VALORE FROM FRC_PARAMETRI WHERE PARAMETRO_NOME = 'DATA FINE OSSERVATO')
		AND KEYDATA<= (SELECT PARAMETRO_VALORE FROM FRC_PARAMETRI WHERE PARAMETRO_NOME = 'DATA FINE SIMULAZIONE')
		AND GIORNO=1  
	),
	LAST_MONTH AS (
		SELECT *
		FROM FRC_PARCO_OSSERVATO_AGGREGATO
		WHERE CALENDARIO=@DATAFINEOSSERVATO 
	)
	SELECT DISTINCT I.KEYDATA AS CALENDARIO
			   , F.ANNOMESEATTIVAZIONE
			   , F.SERVIZIO
			   , F.MESE
			   , F.TIPOCLIENTE
			   , F.CANALE
			   , F.SOTTOTIPOCONTRATTO
			   , F.IDLISTVEN 
			   , F.IDLISTACQ
			   , F.IDCURVA
			   , F.NUMEROCLIENTI
			   , F.NUMEROUTENZE
			   , F.FE
			   , F.CANONEMESE
			   , F.NUMEROUTENZEPERSE
			   , F.NUMEROCLIENTIPERSI
			   , F.NUMEROUTENZENUOVE
			   , F.NUMEROCLIENTINUOVI
			   , F.NUMCONTRATTI
			   , F.NUMCONTRATTINUOVI
			   , F.NUMCONTRATTIPERSI 
			   , F.NUMCONTRATTIPERSIMOBILE
			   , F.NUMCONTRATTINOMOBILE
			   ,'REPLICATO' TIPOPARCO
			   , ANNO_SERVIZIO= DATEDIFF(MONTH, ANNOMESEATTIVAZIONE, KEYDATA)/12 +1  -- l'anno contrattuale effettivo (in cui ricade KEYDATA per questa riga)
			   , ANNO_SERVIZIO_FINE_OSSERVATO = DATEDIFF(MONTH, ANNOMESEATTIVAZIONE, @DATAFINEOSSERVATO)/12 +1 -- l'anno contrattuale in cui è finito l'osservato
			   , SMS,
				MINUTI,
				GB,
				CONSUMOMESE
				, CONSUMODEFF1
				, CONSUMODEFF2
				, CONSUMODEFF3
				, CONSUMORAMO_1
				, CONSUMORAMO_2
				, NUMD2
				, SDD
				, VOLUMEPERSO_OSS_INT_SC
				, TAGLIAMESE_AVG
				, UNITARIOVENDITAPACCHETTO_REP=UNITARIOVENDITAPACCHETTO
				, TAGLIARAMO1_AVG
				, TAGLIARAMO2_AVG
				, UNITARIOPM UNITARIOPM_AVG
				, UNITARIOPS UNITARIOPS_AVG
				, UNITARIOPM_RAMO1 UNITARIOPM_RAMO1_AVG
				, UNITARIOPM_RAMO2 UNITARIOPM_RAMO2_AVG 
				, UNITARIOPS_RAMO1 UNITARIOPS_RAMO1_AVG  
				, UNITARIOPS_RAMO2  UNITARIOPS_RAMO2_AVG
				, STIMACONSUMOANNUO_PARCO_OSS
				, RESIDENTI
				, CR_POSITIVO_INT_OSS 
				, CR_NEGATIVO_INT_OSS 
				, CR_POSITIVO_STORNATO_INT_OSS 
				, CR_NEGATIVO_STORNATO_INT_OSS
				, BONUSINIZIALESALDATI 
		INTO ##FRC_EXPLODED
		FROM LAST_MONTH F
		JOIN INTERVALLOSIMULAZIONE I ON 1=1;


		
SELECT DISTINCT 
	CANALE = CANALE_DI_VENDITA, 
	TIPO_CLIENTE=TARGET,
	SERVIZIO,
	CODICE_SOTTOTIPOCONTRATTO, 
	ANNO, 
	IDLISTINOVENDITA,
	INIZIO_VALIDITA,
	FINE_VALIDITA
INTO ##RO_FASCIZZATO
FROM  FRC_WT_DIM_ROLISTINIVENDITA X;

WITH MAX_ANNO AS (
SELECT  
	CANALE = CANALE_DI_VENDITA, 
	TIPO_CLIENTE=TARGET,
	SERVIZIO, 
	CODICE_SOTTOTIPOCONTRATTO,
	--INIZIO_VALIDITA,
	--FINE_VALIDITA,
	MAX(ANNO) ANNO_MAX--, 
FROM  FRC_WT_DIM_ROLISTINIVENDITA X
GROUP BY CANALE_DI_VENDITA, TARGET, SERVIZIO, CODICE_SOTTOTIPOCONTRATTO--, INIZIO_VALIDITA, FINE_VALIDITA
)
SELECT 
	A.*,
	 B.IDLISTINOVENDITA
	, B.INIZIO_VALIDITA
	, B.FINE_VALIDITA
INTO ##ANNO_MAX
FROM MAX_ANNO A 
INNER JOIN FRC_WT_DIM_ROLISTINIVENDITA B 
ON A.CANALE=B.CANALE_DI_VENDITA
	AND A.TIPO_CLIENTE=B.TARGET
	AND A.SERVIZIO=B.SERVIZIO
	AND A.CODICE_SOTTOTIPOCONTRATTO=B.CODICE_SOTTOTIPOCONTRATTO
	--AND A.INIZIO_VALIDITA=B.INIZIO_VALIDITA
	--AND A.FINE_VALIDITA=B.FINE_VALIDITA
	AND A.ANNO_MAX=B.ANNO;


TRUNCATE TABLE FRC_PARCO_OSSERVATO_REPLICATO;

INSERT INTO FRC_PARCO_OSSERVATO_REPLICATO
SELECT  DISTINCT CALENDARIO,
			ANNOMESEATTIVAZIONE,
			W.SERVIZIO,
			W.MESE,
			W.TIPOCLIENTE,
			W.CANALE,
			W.SOTTOTIPOCONTRATTO,
			IDLISTVEN,
			--IDLISTVEN = ISNULL(F.IDLISTINOVENDITA, W.IDLISTVEN),
			IDLISTACQ collate Latin1_General_CI_AS IDLISTACQ,
			IDCURVA, 
			NUMEROCLIENTI = SUM(NUMEROCLIENTI),
			NUMEROUTENZE = SUM(NUMEROUTENZE),
			FE = case when sum(NUMEROCLIENTI) = 0 then 0 else SUM(NUMEROCLIENTI*FE)/SUM(NUMEROCLIENTI) end,
			NUMEROUTENZEPERSE = sum(NUMEROUTENZEPERSE),
			NUMEROCLIENTIPERSI = SUM(NUMEROCLIENTIPERSI),
			NUMEROUTENZENUOVE = SUM(NUMEROUTENZENUOVE),
			NUMEROCLIENTINUOVI = SUM(NUMEROCLIENTINUOVI),
			NUMCONTRATTI = SUM(NUMCONTRATTI),
			NUMCONTRATTINUOVI = SUM(NUMCONTRATTINUOVI),
			NUMCONTRATTIPERSI = SUM(NUMCONTRATTIPERSI),
			NUMCONTRATTIPERSIMOBILE = SUM(NUMCONTRATTIPERSIMOBILE),
			NUMCONTRATTINOMOBILE = SUM(NUMCONTRATTINOMOBILE),
			TIPOPARCO,
			CANONEMESE = SUM(W.CANONEMESE),
			SMS = SUM(SMS),
			MINUTI = SUM(MINUTI),
			GB = SUM(GB),
			CONSUMOMESE = SUM(CONSUMOMESE)
			, CONSUMODEFF1 = SUM(CONSUMODEFF1)
			, CONSUMODEFF2 = SUM(CONSUMODEFF2)
			, CONSUMODEFF3 = SUM(CONSUMODEFF2)
			, CONSUMORAMO_1 = SUM(CONSUMORAMO_1)
			, CONSUMORAMO_2 = SUM(CONSUMORAMO_1)
			, NUMD2 = SUM(NUMD2) 
			, SDD = case when sum(NUMEROCLIENTI) = 0 then 0 else SUM(NUMEROCLIENTI*SDD)/SUM(NUMEROCLIENTI) end
			, VOLUMEPERSO_OSS_INT_SC = SUM(VOLUMEPERSO_OSS_INT_SC)
			, TAGLIAMESE_AVG = AVG(TAGLIAMESE_AVG)
			, UNITARIOVENDITAPACCHETTO_REP = AVG(UNITARIOVENDITAPACCHETTO_REP)
			, TAGLIARAMO1_AVG = AVG(TAGLIARAMO1_AVG)
			, TAGLIARAMO2_AVG = AVG(TAGLIARAMO2_AVG)
			, UNITARIOPM_AVG = AVG(UNITARIOPM_AVG)
			, UNITARIOPS_AVG = AVG(UNITARIOPS_AVG)
			, UNITARIOPM_RAMO1_AVG = AVG(UNITARIOPM_RAMO1_AVG)
			, UNITARIOPM_RAMO2_AVG = AVG(UNITARIOPM_RAMO2_AVG)
			, UNITARIOPS_RAMO1_AVG = AVG(UNITARIOPS_RAMO1_AVG)
			, UNITARIOPS_RAMO2_AVG = AVG(UNITARIOPS_RAMO2_AVG)
			, AVG(STIMACONSUMOANNUO_PARCO_OSS) STIMACONSUMOANNUO_PARCO_OSS
			, RESIDENTI = case when sum(NUMEROCLIENTI) = 0 then 0 else 1.0*sum(RESIDENTI*NUMEROCLIENTI) / SUM(NUMEROCLIENTI) end
			, CR_POSITIVO_INT_OSS = SUM(CR_POSITIVO_INT_OSS)
			, CR_NEGATIVO_INT_OSS = SUM(CR_NEGATIVO_INT_OSS)
			, CR_POSITIVO_STORNATO_INT_OSS = SUM(CR_POSITIVO_STORNATO_INT_OSS)
			, CR_NEGATIVO_STORNATO_INT_OSS = SUM(CR_NEGATIVO_STORNATO_INT_OSS)
			, BONUSINIZIALESALDATI = SUM(BONUSINIZIALESALDATI)

from (
		select DISTINCT CALENDARIO,
					ANNOMESEATTIVAZIONE,
					W.SERVIZIO,
					W.MESE,
					W.TIPOCLIENTE,
					W.CANALE,
					W.SOTTOTIPOCONTRATTO,
					IDLISTVEN = CASE 
									-- Se arrivano info più vecchie delle tempistiche previste dal registro offerte, o se è il primo anno, teniamo il vecchio (o pure se è integrato)
									WHEN (ANNO_SERVIZIO_FINE_OSSERVATO >= ANNOMAX.ANNO_MAX) OR (ANNO_SERVIZIO = 1) or (W.TIPOCLIENTE not like 'SCIOLTO%') then W.IDLISTVEN
									-- Altrimenti, se matcha un anno particolare teniamo quello 
									WHEN F.SERVIZIO IS NOT NULL THEN F.IDLISTINOVENDITA 
									ELSE CASE 
											-- se non matcha un anno particolare, ma matcherebbe con l'anno massimo, teniamo il listino all'anno massimo
											-- in questo modo, il listino valido al 3° anno (max anno), si usa anche al 4°, 5°, 6°....
											WHEN ANNOMAX.SERVIZIO IS NOT NULL AND ANNOMAX.ANNO_MAX<ANNO_SERVIZIO THEN ANNOMAX.IDLISTINOVENDITA 

											-- Se non matcha, teniamo il vecchio
											ELSE W.IDLISTVEN 
										END 
								END COLLATE LATIN1_GENERAL_CI_AS,
					--IDLISTVEN = ISNULL(F.IDLISTINOVENDITA, W.IDLISTVEN),
					IDLISTACQ,
					IDCURVA, 
					NUMEROCLIENTI,
					NUMEROUTENZE,
					FE,
					NUMEROUTENZEPERSE,
					NUMEROCLIENTIPERSI,
					NUMEROUTENZENUOVE,
					NUMEROCLIENTINUOVI,
					NUMCONTRATTI,
					NUMCONTRATTINUOVI,
					NUMCONTRATTIPERSI,
					NUMCONTRATTIPERSIMOBILE,
					NUMCONTRATTINOMOBILE,
					TIPOPARCO,
					CANONEMESE,
					SMS,
					MINUTI,
					GB,
					CONSUMOMESE
					, CONSUMODEFF1
					, CONSUMODEFF2
					, CONSUMODEFF3 
					, CONSUMORAMO_1
					, CONSUMORAMO_2 
					, NUMD2 
					, SDD
					,VOLUMEPERSO_OSS_INT_SC
					,TAGLIAMESE_AVG
					,UNITARIOVENDITAPACCHETTO_REP
					,TAGLIARAMO1_AVG
					,TAGLIARAMO2_AVG
					, UNITARIOPM_AVG
					, UNITARIOPS_AVG
					, UNITARIOPM_RAMO1_AVG
					, UNITARIOPM_RAMO2_AVG 
					, UNITARIOPS_RAMO1_AVG  
					, UNITARIOPS_RAMO2_AVG
					, STIMACONSUMOANNUO_PARCO_OSS
					, RESIDENTI
					, CR_POSITIVO_INT_OSS 
					, CR_NEGATIVO_INT_OSS 
					, CR_POSITIVO_STORNATO_INT_OSS 
					, CR_NEGATIVO_STORNATO_INT_OSS
					, BONUSINIZIALESALDATI
				FROM ##FRC_EXPLODED W
				LEFT JOIN ##RO_FASCIZZATO F 
					ON F.CANALE = W.CANALE COLLATE LATIN1_GENERAL_CI_AS
						AND F.TIPO_CLIENTE = W.TIPOCLIENTE 
						AND W.ANNO_SERVIZIO = ANNO 
						AND F.CODICE_SOTTOTIPOCONTRATTO=W.SOTTOTIPOCONTRATTO COLLATE LATIN1_GENERAL_CI_AS
						AND F.SERVIZIO=W.SERVIZIO
						AND W.MESE >= F.INIZIO_VALIDITA AND W.MESE<F.FINE_VALIDITA 
				LEFT JOIN 	##ANNO_MAX	ANNOMAX
					ON W.CANALE=ANNOMAX.CANALE COLLATE LATIN1_GENERAL_CI_AS
					AND W.TIPOCLIENTE=ANNOMAX.TIPO_CLIENTE COLLATE LATIN1_GENERAL_CI_AS
					AND W.SERVIZIO=ANNOMAX.SERVIZIO
					AND W.MESE >= ANNOMAX.INIZIO_VALIDITA AND W.MESE<ANNOMAX.FINE_VALIDITA
					AND W.SOTTOTIPOCONTRATTO=ANNOMAX.CODICE_SOTTOTIPOCONTRATTO  COLLATE LATIN1_GENERAL_CI_AS
	) W
	-- grouppiamo per rimuovere i duplicati 
	group by 
		CALENDARIO,
		ANNOMESEATTIVAZIONE,
		W.SERVIZIO,
		W.MESE,
		W.TIPOCLIENTE,
		W.CANALE,
		W.SOTTOTIPOCONTRATTO,
		IDLISTVEN,
		--IDLISTVEN = ISNULL(F.IDLISTINOVENDITA, W.IDLISTVEN),
		IDLISTACQ,
		IDCURVA, 
		TIPOPARCO
	;
		
END

GO


alter PROCEDURE [DBO].[FRC_P_PARCO_OSSERVATO]
AS

	BEGIN TRY 
		DECLARE @TIME_NOW DATETIME

		SET @TIME_NOW = GETDATE();
		EXECUTE [DBO].[FRC_LOG] @STARTTIME = @TIME_NOW, @EXECUTIONPROCEDURE = N'FRC_P_PARCO_OSSERVATO_DETTAGLIO', @OUTCOME = N'START';
		
			EXEC FRC_P_PARCO_OSSERVATO_DETTAGLIO 

		SET @TIME_NOW = GETDATE();
		EXECUTE [DBO].[FRC_LOG] @STARTTIME = @TIME_NOW, @EXECUTIONPROCEDURE = N'FRC_P_PARCO_OSSERVATO_DETTAGLIO', @OUTCOME = N'END';


		SET @TIME_NOW = GETDATE();
		EXECUTE [DBO].[FRC_LOG] @STARTTIME = @TIME_NOW, @EXECUTIONPROCEDURE = N'FRC_P_AGGREGAZIONE_PARCO', @OUTCOME = N'START';


			EXEC FRC_P_AGGREGAZIONE_PARCO 

		SET @TIME_NOW = GETDATE();
		EXECUTE [DBO].[FRC_LOG] @STARTTIME = @TIME_NOW, @EXECUTIONPROCEDURE = N'FRC_P_AGGREGAZIONE_PARCO', @OUTCOME = N'END';


		SET @TIME_NOW = GETDATE();
		EXECUTE [DBO].[FRC_LOG] @STARTTIME = @TIME_NOW, @EXECUTIONPROCEDURE = N'FRC_P_REPLICA_PARCO', @OUTCOME = N'START';
	
			EXEC FRC_P_REPLICA_PARCO 

		SET @TIME_NOW = GETDATE();
		EXECUTE [DBO].[FRC_LOG] @STARTTIME = @TIME_NOW, @EXECUTIONPROCEDURE = N'FRC_P_REPLICA_PARCO', @OUTCOME = N'END';


	END TRY
	BEGIN CATCH
		DECLARE @PROCEDURE NVARCHAR(25) = ERROR_PROCEDURE();
		DECLARE @ERRORLINE INT = ERROR_LINE();
		DECLARE @ERRORMESSAGE NVARCHAR(4000) = ERROR_MESSAGE();
		EXECUTE [DBO].[FRC_ERROR] @STARTTIME = @TIME_NOW, @EXECUTIONPROCEDURE = @PROCEDURE, @ERRORLINE = @ERRORLINE, @ERRORMESSAGE = @ERRORMESSAGE;
	END CATCH;

GO