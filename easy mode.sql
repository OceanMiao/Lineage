-- QUERY ESTRAZIONE PARCO OSSERVATO INTEGRATO + SCIOLTO, 
-- A/V DA VITAMIA
-- E/G/M DA NEWMODEL


DECLARE @DATAFINEOSSERVATO DATE;
DECLARE @DATAINIZIOOSSERVATO DATE;
DECLARE @DATAFINENUOVIREALI DATE;
DECLARE @UNITARIOACQUISTOMOBILE DECIMAL(10,2);
DECLARE @LIST_FITT_VEN_E varchar(10);
DECLARE @LIST_FITT_VEN_G varchar(10);
DECLARE @PERDITE_DI_RETE_CONSUMER FLOAT = (SELECT PARAMETRO_VALORE FROM FRC_PARAMETRI WHERE PARAMETRO_NOME = 'PERDITE DI RETE CONSUMER');
DECLARE @PERDITE_DI_RETE_BUSINESS FLOAT = (SELECT PARAMETRO_VALORE FROM FRC_PARAMETRI WHERE PARAMETRO_NOME = 'PERDITE DI RETE BUSINESS');

DECLARE @STRINGA_LISTINO_O_SOTTOTIPO_ASSENTE varchar(30) = 'NON PRESENTE';


	
	SET @DATAFINEOSSERVATO = (SELECT CONVERT(DATE, PARAMETRO_VALORE, 112) FROM FRC_PARAMETRI WHERE PARAMETRO_NOME = 'DATA FINE OSSERVATO');
	SET @DATAINIZIOOSSERVATO = (SELECT CONVERT(DATE, PARAMETRO_VALORE, 112) FROM FRC_PARAMETRI WHERE PARAMETRO_NOME = 'Data Inizio Osservato');
	SET @DATAFINENUOVIREALI = (SELECT CONVERT(DATE, PARAMETRO_VALORE, 112) FROM FRC_PARAMETRI WHERE PARAMETRO_NOME = 'Data Fine Nuovi Reali');
	SET @UNITARIOACQUISTOMOBILE =(SELECT MAX(VALORE_F1) FROM FRC_M_LISTINI_FITTIZI WHERE SERVIZIO='M');
	SET @LIST_FITT_VEN_E = (select idListinoVendita
							from frc_t_ro_sottotipocontratto
							where upper(codice_sottotipoContratto) like 'CONTRATTOSCIOLTO%'
								and upper(servizio) = 'ENERGIA');

	SET @LIST_FITT_VEN_G = (    select idListinoVendita
								from frc_t_ro_sottotipocontratto
								where upper(codice_sottotipoContratto) like 'CONTRATTOSCIOLTO%'
									and upper(servizio) = 'GAS'
							)
							;


	IF OBJECT_ID('FRC_IMPORT_E', 'U') IS NOT NULL
		DROP TABLE FRC_IMPORT_E;

	IF OBJECT_ID('FRC_IMPORT_G', 'U') IS NOT NULL
		DROP TABLE FRC_IMPORT_G;

	IF OBJECT_ID('FRC_IMPORT_AV', 'U') IS NOT NULL
		DROP TABLE FRC_IMPORT_AV;

	IF OBJECT_ID('FRC_IMPORT_M', 'U') IS NOT NULL
		DROP TABLE FRC_IMPORT_M;

	-- Calcolo il saldo fatturato 
	-- Prima stazione: recupero i clienti di cui mi importa (integrato)
		
		-- A/V		
		select distinct calendario = meseriferimento,
				   a.servizio, 
				   a.idcliente
		into #ClientiIntegrato
		FROM [dbo].[SIMULAZIONEMARGINEVITAMIA] AS A
		LEFT JOIN [dbo].[FRC_WT_DIM_BASECLICONTR] AS DD  ON DD.IDCONTRATTO = A.IDCONTRATTO
		where CASE 
					WHEN DD.CANALEVENDITA='CAMPAGNA NAZIONALE' AND DD.TIPOCLIENTECLUSTER='CONSUMER' 
					THEN 'CAMPAGNA NAZIONALE - CONSUMER' ELSE DD.TIPOCLIENTECLUSTER 
				END not like 'SCIOLTO%'
				and MESERIFERIMENTO <= @DATAFINEOSSERVATO AND A.SERVIZIO IN ('V', 'A')
				AND MESERIFERIMENTO >= @DATAINIZIOOSSERVATO
		
		union all
		
		-- E
		select distinct calendario = KEYDATA,
				servizio = 'E',
				a.IDCLIENTE
		from newModel_ParcoEnergia a
		LEFT JOIN   [dbo].[FRC_WT_DIM_BASECLICONTR] AS DD  ON DD.IDCONTRATTO = A.IDCONTRATTO
		where CASE WHEN DD.CANALEVENDITA='CAMPAGNA NAZIONALE' AND DD.TIPOCLIENTECLUSTER='CONSUMER' THEN 'CAMPAGNA NAZIONALE - CONSUMER' 
			ELSE DD.TIPOCLIENTECLUSTER END not like 'SCIOLTO%'
			and KEYDATA <= @DATAFINEOSSERVATO AND KEYDATA >= @DATAINIZIOOSSERVATO

		union all

		-- G
		select distinct calendario=KEYDATA,
					servizio = 'G',
					a.idCliente
		from newModel_ParcoGas a
		LEFT JOIN   [dbo].[FRC_WT_DIM_BASECLICONTR] AS DD  ON DD.IDCONTRATTO = A.IDCONTRATTO
		where CASE WHEN DD.CANALEVENDITA='CAMPAGNA NAZIONALE' AND DD.TIPOCLIENTECLUSTER='CONSUMER' THEN 'CAMPAGNA NAZIONALE - CONSUMER' 
			ELSE DD.TIPOCLIENTECLUSTER END not like 'SCIOLTO%'
				and KEYDATA <= @DATAFINEOSSERVATO AND KEYDATA >= @DATAINIZIOOSSERVATO

		union all

		-- M
		select distinct calendario=KEYDATA,
					servizio = 'M',
					a.idCliente
		from newModel_ParcoMobile a
		LEFT JOIN   [dbo].[FRC_WT_DIM_BASECLICONTR] AS DD  ON DD.IDCONTRATTO = A.IDCONTRATTO
		where CASE WHEN DD.CANALEVENDITA='CAMPAGNA NAZIONALE' AND DD.TIPOCLIENTECLUSTER='CONSUMER' THEN 'CAMPAGNA NAZIONALE - CONSUMER' 
			ELSE DD.TIPOCLIENTECLUSTER END not like 'SCIOLTO%'
				and KEYDATA <= @DATAFINEOSSERVATO AND KEYDATA >= @DATAINIZIOOSSERVATO
		;

		-- Calcoliamo il saldo fatturato medio per ciascuno servizio (che poi agganciamo)
		select calendario, a.IdCliente, -1.0*(SALDOFATTURATO + SALDOFATTURATODODICESIMA)/servizi SALDOFATTURATO
		into #ClientiSaldo
		from (
			select calendario, IdCliente, COUNT(distinct servizio) servizi
			from #ClientiIntegrato
			group by calendario, IdCliente
		) a
		LEFT JOIN   [DBO].[MODFORECAST_INPUT_SALDOFATTURATO] F ON F.CLIENTE = A.IDCLIENTE AND F.MESEEMISSIONESALDO = calendario
		;


		-- Calcolo le date di attivazione e cessazione per ogni utente A/V
		-- Necessario per valorizzare le utenze nuove e le utenze perse
		
		select distinct IdCliente, IdContratto, cast(idadslcliente as varchar) utenza,
		        servizio = 'A',
				AnnoMeseAttivazione = substring(convert(varchar, MIN(DataAttivazione) over (partition by idCliente, IdContratto, idadslcliente), 112),1,6),
				AnnoMeseCessazione =  substring(convert(varchar, MAX(isnull(DataDisattivazione, '2200-12-01')) over (partition by idcliente, IdContratto, idadslcliente), 112), 1, 6)

		into #AttivazioniCessazioni
		from newModel_ParcoAdsl

		union all

		--select distinct idCliente, idcontratto, concat(idcliente,'-',idcli) utenza, servizio = 'V',
		--					AnnoMeseAttivazione = substring(convert(varchar, MIN(DataAttivazione) over (partition by idCliente, IdContratto, concat(idcliente,'-',idcli)),112), 1,6),
		--					AnnoMeseCessazione =  substring(convert(varchar, MAX(isnull(DataDisattivazione, '2200-12-01')) over (partition by idcliente, IdContratto, concat(idcliente,'-',idcli)),112), 1, 6)
		--from newmodel_parcoVoce;
		SELECT DISTINCT
			CC_CLIENTE AS IDCLIENTE, 
			CC_IDCONTRATTO AS IDCONTRATTO, 
			CONCAT(CC_CLIENTE,'-',CC_CLI) UTENZA, 
			SERVIZIO = 'V',
			ANNOMESEATTIVAZIONE = SUBSTRING(CONVERT(VARCHAR, MIN(CC_DTINIVAL) OVER (PARTITION BY CC_CLIENTE, CC_IDCONTRATTO, CONCAT(CC_CLIENTE,'-',CC_CLI)),112), 1,6),
			ANNOMESECESSAZIONE =  SUBSTRING(CONVERT(VARCHAR, MAX(ISNULL(CC_DTFINVAL, '2200-12-01')) OVER (PARTITION BY CC_CLIENTE, CC_IDCONTRATTO, CONCAT(CC_CLIENTE,'-',CC_CLI)),112), 1, 6)
		FROM SIN_VIEWER.SIN_AZ.DBO.TCLIENTICLI
		WHERE CC_IDCONTRATTO IS NOT NULL
			AND CC_DTINIVAL IS NOT NULL
		;


		WITH IMPORT_AV AS (
		SELECT A.SERVIZIO
			, CANALE = DD.CANALEVENDITA 
			, TIPOCLIENTE = CASE WHEN DD.CANALEVENDITA='CAMPAGNA NAZIONALE' AND DD.TIPOCLIENTECLUSTER='CONSUMER' THEN 'CAMPAGNA NAZIONALE - CONSUMER' 
									ELSE DD.TIPOCLIENTECLUSTER END
			, MESE = CONVERT(DATE,CONVERT(VARCHAR(7), DD.DATASTIPULA, 112)  + '-01')
			, ANNO = DATEDIFF (MONTH, convert(date, convert(varchar, ac.AnnoMeseAttivazione)+'01', 112), MeseRiferimento)/12 + 1
			, CAST(A.IDCONTRATTOPADRE AS VARCHAR(14)) IDCONTRATTOPADRE
			, IDCONTRATTOFIGLIO = CAST(A.IDCONTRATTO AS VARCHAR(14))
			, SOTTOTIPOCONTRATTO = ISNULL(DD.CODICESOTTOTIPOCONTRATTO,@STRINGA_LISTINO_O_SOTTOTIPO_ASSENTE)
			, A.IDCLIENTE
			, IDLISTVEN = @STRINGA_LISTINO_O_SOTTOTIPO_ASSENTE
			, IDLISTACQ = @STRINGA_LISTINO_O_SOTTOTIPO_ASSENTE
			, ANNOMESEATTIVAZIONE = convert(date, convert(varchar, ac.AnnoMeseAttivazione)+'01', 112)
			, CALENDARIO = MESERIFERIMENTO
			, MESEDICONSUMO = MONTH(MESERIFERIMENTO)
			, CAST(A.UTENZA AS VARCHAR(25)) UTENZA
			, CONSUMO = CASE WHEN A.SERVIZIO = 'A' THEN TAGLIA ELSE NULL END
			, SALDOULTIMOMESE
			, BONUSINIZIALE=0
			--OLD , BONUSINIZIALE = BONUSDISATTIVAZIONE
			, MODALITAPAGAMENTO = ISNULL(MODALITAPAGAMENTO, 'BOLLETTINO')
			, MODALITASPEDIZIONEFATTURA = ISNULL(MODALITASPEDIZIONEFATTURA, 'CARTACEA')
			, CANONERAI = CASE WHEN CODTARIFFATRASPORTO = 'D2' THEN 1 ELSE 0 END
			, FLAGTIPOPARCO = 'OSSERVATO'
			, ULTIMORECORDUTENZA = case when convert(int, convert(varchar(6),meseRiferimento,112)) = ac.AnnoMeseCessazione then 1 else 0 end
			, PRIMORECORDUTENZA = case when convert(int, convert(varchar(6),meseRiferimento,112)) = ac.AnnoMeseAttivazione then 1 else 0 end
			, SALDOFATTURATO
			, IDCURVA= CASE WHEN A.SERVIZIO='A' THEN -2 ELSE ISNULL(M.IDCURVA, 80)  END 
			, DATAFINEPRELIEVO = convert(date, convert(varchar, ac.AnnoMeseCessazione)+'01', 112) 
			, CANONEMESE
			, SMS = 0 
			, MINUTI = 0
			, GB = 0
			, CONSUMODEFF1 = 0
			, CONSUMODEFF2 = 0
			, CONSUMODEFF3 = 0
			, CONSUMORAMO_1 = (CASE WHEN IDDIRETTRICETRAFFICO = 1 THEN CONSUMO ELSE 0 END)
			, CONSUMORAMO_2 = (CASE WHEN IDDIRETTRICETRAFFICO = 2 THEN CONSUMO ELSE 0 END)
			, TAGLIA
			, TAGLIARAMO_1 = (CASE WHEN IDDIRETTRICETRAFFICO = 1 THEN TAGLIA ELSE 0 END)
			, TAGLIARAMO_2 = (CASE WHEN IDDIRETTRICETRAFFICO = 2 THEN TAGLIA ELSE 0 END)
			, TAGLIAMINUTI=NULL
			, TAGLIASMS=NULL
			, TAGLIAGIGA=NULL
			, UNITARIOPS = PREZZOOLTRESOGLIA 
			, UNITARIOPM = PREZZOSOTTOSOGLIA
			, UNITARIOPM_RAMO1 = (CASE WHEN IDDIRETTRICETRAFFICO = 1 THEN PREZZOSOTTOSOGLIA ELSE 0 END) 
			, UNITARIOPM_RAMO2 = (CASE WHEN IDDIRETTRICETRAFFICO = 2 THEN PREZZOSOTTOSOGLIA ELSE 0 END) 
			, UNITARIOPS_RAMO1 = (CASE WHEN IDDIRETTRICETRAFFICO = 1 THEN PREZZOOLTRESOGLIA ELSE 0 END) 
			, UNITARIOPS_RAMO2 = (CASE WHEN IDDIRETTRICETRAFFICO = 2 THEN PREZZOOLTRESOGLIA ELSE 0 END) 
			, UNITARIOVENDITAPACCHETTO = ISNULL(CanoneMese, 0) / CASE WHEN CASE WHEN TAGLIA IS NULL AND A.SERVIZIO = 'V' THEN 1 ELSE TAGLIA END = 0 THEN 1 ELSE CASE WHEN TAGLIA IS NULL AND A.SERVIZIO = 'V' THEN 1 ELSE TAGLIA END END
			, UNITARIOACQUISTO = 
-- 15/05
			CASE WHEN A.SERVIZIO='A' THEN PRICING.UNITARIOACQUISTO ELSE
			(ISNULL(COSTO, 0)  / (CASE WHEN CONSUMO = 0 THEN 1 ELSE CONSUMO END ) ) END
			, VOLUMEPERSO=NULL
			, STIMAMINUTI_PARCO_OSS=0
			, STIMASMS_PARCO_OSS=0
			, STIMAGB_PARCO_OSS=0
			, IdDirettriceTraffico
		--INTO FRC_IMPORT_AV
		FROM   [DBO].[SIMULAZIONEMARGINEVITAMIA] AS A
		LEFT JOIN   [DBO].[FRC_WT_DIM_BASECLICONTR] AS DD  ON DD.IDCONTRATTO = A.IDCONTRATTO
		LEFT JOIN #ClientiSaldo F ON F.idCLIENTE = A.IDCLIENTE AND F.calendario = MESERIFERIMENTO
		LEFT JOIN FRC_M_CURVE_PARCO_OSS M
			ON DD.TIPOCLIENTECLUSTER=M.TIPOCLIENTE
			AND A.SERVIZIO=M.SERVIZIO
		LEFT JOIN FRC_WT_DIM_PRICING PRICING 
			ON  (CASE WHEN DD.CANALEVENDITA='CAMPAGNA NAZIONALE' AND DD.TIPOCLIENTECLUSTER='CONSUMER' THEN 'CAMPAGNA NAZIONALE - CONSUMER' 
				ELSE DD.TIPOCLIENTECLUSTER END)=PRICING.TIPOCLIENTE
			AND A.SERVIZIO=PRICING.SERVIZIO
			and month(A.MeseRiferimento) = PRICING.MESE

		LEFT JOIN #AttivazioniCessazioni ac
			on A.IdCliente = ac.IdCliente and a.Servizio = ac.Servizio and A.Utenza = ac.Utenza and A.IdContratto = ac.IdContratto
		

		WHERE MESERIFERIMENTO <= @DATAFINEOSSERVATO AND A.SERVIZIO IN ('V', 'A')
			AND MESERIFERIMENTO >= @DATAINIZIOOSSERVATO
	
	)
		
		
		SELECT 
			IMPORT_AV.SERVIZIO
			, IMPORT_AV.CANALE
			, IMPORT_AV.TIPOCLIENTE 
			, IMPORT_AV.MESE 
			, IMPORT_AV.ANNO 
			, IMPORT_AV.IDCONTRATTOPADRE
			, IMPORT_AV.IDCONTRATTOFIGLIO
			, IMPORT_AV.SOTTOTIPOCONTRATTO
			, IMPORT_AV.IDCLIENTE
			, IMPORT_AV.IDLISTVEN
			, IMPORT_AV.IDLISTACQ 
			, IMPORT_AV.ANNOMESEATTIVAZIONE
			, IMPORT_AV.CALENDARIO
			, IMPORT_AV.MESEDICONSUMO 
			, IMPORT_AV.UTENZA
			, IMPORT_AV.CONSUMO 
			, IMPORT_AV.SALDOULTIMOMESE
			, IMPORT_AV.BONUSINIZIALE
			--OLD , BONUSINIZIALE = BONUSDISATTIVAZIONE
			, IMPORT_AV.MODALITAPAGAMENTO
			, IMPORT_AV.MODALITASPEDIZIONEFATTURA
			, IMPORT_AV.CANONERAI
			, IMPORT_AV.FLAGTIPOPARCO
			, IMPORT_AV.ULTIMORECORDUTENZA 
			, IMPORT_AV.PRIMORECORDUTENZA
			, IMPORT_AV.SALDOFATTURATO
			, IMPORT_AV.IDCURVA
			, IMPORT_AV.DATAFINEPRELIEVO 
			, IMPORT_AV.CANONEMESE
			, IMPORT_AV.SMS
			, IMPORT_AV.MINUTI
			, IMPORT_AV.GB
			, IMPORT_AV.CONSUMODEFF1
			, IMPORT_AV.CONSUMODEFF2 
			, IMPORT_AV.CONSUMODEFF3 
			, IMPORT_AV.CONSUMORAMO_1
			, IMPORT_AV.CONSUMORAMO_2
			, IMPORT_AV.TAGLIA
			, IMPORT_AV.TAGLIARAMO_1 
			, IMPORT_AV.TAGLIARAMO_2
			, IMPORT_AV.TAGLIAMINUTI
			, IMPORT_AV.TAGLIASMS
			, IMPORT_AV.TAGLIAGIGA
			, IMPORT_AV.UNITARIOPS 
			, IMPORT_AV.UNITARIOPM
			, IMPORT_AV.UNITARIOPM_RAMO1
			, IMPORT_AV.UNITARIOPM_RAMO2
			, IMPORT_AV.UNITARIOPS_RAMO1
			, IMPORT_AV.UNITARIOPS_RAMO2
			, IMPORT_AV.UNITARIOVENDITAPACCHETTO 
			, IMPORT_AV.UNITARIOACQUISTO 
			, IMPORT_AV.VOLUMEPERSO
			, IMPORT_AV.STIMAMINUTI_PARCO_OSS
			, IMPORT_AV.STIMASMS_PARCO_OSS
			, IMPORT_AV.STIMAGB_PARCO_OSS
			, STIMACONSUMOANNUO_PARCO_OSS=(CASE WHEN IMPORT_AV.SERVIZIO='A' AND PERC_CONSUMO<>0 THEN CONSUMO/PERC_CONSUMO 
												WHEN IMPORT_AV.SERVIZIO='V' AND PERC_CONSUMO_F1<>0 AND PERC_CONSUMO_F2<>0 THEN (CONSUMORAMO_1/PERC_CONSUMO_F1)+(CONSUMORAMO_2/PERC_CONSUMO_F2)
												ELSE 0 END)
			, COSTOMESE_OSS_INT=(CASE WHEN IMPORT_AV.SERVIZIO='A' THEN CONSUMO ELSE CONSUMORAMO_1+CONSUMORAMO_2 END) * UNITARIOACQUISTO
			, FATTURATO_OSS_INT=CANONEMESE
			,RICAVOMESE_OSS_INT= (CASE WHEN IMPORT_AV.SERVIZIO='A' THEN TAGLIA ELSE TAGLIARAMO_1+TAGLIARAMO_2 END)*UNITARIOVENDITAPACCHETTO  
			--, RICAVOMESE_OSS_INT = (CASE WHEN SERVIZIO='A' THEN CONSUMO ELSE CONSUMORAMO_1+CONSUMORAMO_2 END) * UNITARIOVENDITAPACCHETTO MODIFICATO 23/04
			, DIFFERENZEPOSITIVE_OSS_INT=
				 CASE WHEN IMPORT_AV.SERVIZIO='A' THEN 0
				 ELSE ((CASE WHEN TAGLIARAMO_1-CONSUMORAMO_1>0 THEN TAGLIARAMO_1-CONSUMORAMO_1 ELSE 0 END) +
				 (CASE WHEN TAGLIARAMO_2-CONSUMORAMO_2>0 THEN TAGLIARAMO_2-CONSUMORAMO_2 ELSE 0 END))  END 
			 , DIFFERENZENEGATIVE_OSS_INT=
				 CASE WHEN IMPORT_AV.SERVIZIO='A' THEN 0
				 ELSE ((CASE WHEN TAGLIARAMO_1-CONSUMORAMO_1<0 THEN TAGLIARAMO_1-CONSUMORAMO_1 ELSE 0 END) +
				 (CASE WHEN TAGLIARAMO_2-CONSUMORAMO_2<0 THEN TAGLIARAMO_2-CONSUMORAMO_2 ELSE 0 END))  END 
			 , 
			 MOVIMENTAZCONTOPOS_INT_OSS= 
				 CASE WHEN IMPORT_AV.SERVIZIO='A' THEN 0
				 ELSE ((CASE WHEN TAGLIARAMO_1-CONSUMORAMO_1>0 THEN (TAGLIARAMO_1-CONSUMORAMO_1)*UNITARIOPM_RAMO1 ELSE 0 END) +
				 (CASE WHEN TAGLIARAMO_2-CONSUMORAMO_2>0 THEN (TAGLIARAMO_2-CONSUMORAMO_2 )*UNITARIOPM_RAMO2 ELSE 0 END))  END 
			 , MOVIMENTAZCONTONEG_INT_OSS=
				 CASE WHEN IMPORT_AV.SERVIZIO='A' THEN 0
				 ELSE ((CASE WHEN TAGLIARAMO_1-CONSUMORAMO_1<0 THEN (TAGLIARAMO_1-CONSUMORAMO_1)*UNITARIOPS_RAMO1 ELSE 0 END) +
				 (CASE WHEN TAGLIARAMO_2-CONSUMORAMO_2<0 THEN (TAGLIARAMO_2-CONSUMORAMO_2)*UNITARIOPS_RAMO2 ELSE 0 END))  END 
			 ,MOVIMENTAZIONICONTO_INT_OSS=
				  CASE WHEN IMPORT_AV.SERVIZIO='A' THEN 0 
				  ELSE
						case when tagliaramo_1 > consumoramo_1 
							then (TAGLIARAMO_1-CONSUMORAMO_1)*UNITARIOPM_RAMO1
							else (tagliaRamo_1-consumoRamo_1)*UNITARIOPS_RAMO1
						end 
						+ 
						case when tagliaramo_2 > consumoRamo_2
							then (TAGLIARAMO_2-CONSUMORAMO_2)*UNITARIOPM_RAMO2
							else (TAGLIARAMO_2-CONSUMORAMO_2)*UNITARIOPS_RAMO2
						end

				 END
				 
			, VOLUMEFINALE_OSS_INT= CASE WHEN IMPORT_AV.SERVIZIO='A' THEN CONSUMO ELSE (CONSUMORAMO_1+CONSUMORAMO_2) END 
			, BONUSINIZIALESALDATI=BONUSINIZIALE

			, CR_POSITIVO_INT_OSS = case when import_AV.servizio = 'V' then SUM(CASE WHEN IMPORT_AV.TAGLIARAMO_1 - IMPORT_AV.CONSUMORAMO_1 >=0 
												THEN  (IMPORT_AV.TAGLIARAMO_1 - IMPORT_AV.CONSUMORAMO_1)*IMPORT_AV.UNITARIOPM_RAMO1
												ELSE 0
											END
											+
											CASE WHEN IMPORT_AV.TAGLIARAMO_2 - IMPORT_AV.CONSUMORAMO_2 >=0 
												THEN  (IMPORT_AV.TAGLIARAMO_2 - IMPORT_AV.CONSUMORAMO_2)*IMPORT_AV.UNITARIOPM_RAMO2
												ELSE 0 
											END
										) OVER (PARTITION BY UTENZA, ANNOMESEATTIVAZIONE, IDCONTRATTOFIGLIO, ANNO, idDirettriceTraffico ORDER BY CALENDARIO ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
										else 0
									end
			, CR_NEGATIVO_INT_OSS = case when import_AV.servizio = 'V' then SUM(CASE WHEN IMPORT_AV.TAGLIARAMO_1 - IMPORT_AV.CONSUMORAMO_1 < 0 
												THEN  (IMPORT_AV.TAGLIARAMO_1 - IMPORT_AV.CONSUMORAMO_1)*IMPORT_AV.UNITARIOPS_RAMO1
												ELSE 0 
											END
											+
											CASE WHEN IMPORT_AV.TAGLIARAMO_2 - IMPORT_AV.CONSUMORAMO_2 <0 
												THEN  (IMPORT_AV.TAGLIARAMO_2 - IMPORT_AV.CONSUMORAMO_2)*IMPORT_AV.UNITARIOPS_RAMO2
												ELSE 0 
											END ) OVER (PARTITION BY UTENZA, ANNOMESEATTIVAZIONE, IDCONTRATTOFIGLIO, ANNO, idDirettriceTraffico ORDER BY CALENDARIO ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
										else 0 
									end

		INTO FRC_IMPORT_AV
		FROM IMPORT_AV IMPORT_AV
		LEFT JOIN FRC_WT_DIM_CURVECOMPORTAMENTO CURVECONSUMO
		ON IMPORT_AV.IDCURVA=CURVECONSUMO.IDCURVA
			AND IMPORT_AV.SERVIZIO=CURVECONSUMO.SERVIZIO
			AND IMPORT_AV.MESEDICONSUMO=CURVECONSUMO.MESEDICONSUMO
		option (MAXDOP 0)

	;
		
		WITH IMPORT_E AS (
		SELECT SERVIZIO = 'E'
				, CANALE = DD.CANALEVENDITA 
				, TIPOCLIENTE = CASE WHEN DD.CANALEVENDITA='CAMPAGNA NAZIONALE' AND DD.TIPOCLIENTECLUSTER='CONSUMER' THEN 'CAMPAGNA NAZIONALE - CONSUMER' 
			ELSE DD.TIPOCLIENTECLUSTER END
				, MESE = CONVERT(DATE,CONVERT(VARCHAR(7), DD.DATASTIPULA, 112)  + '-01')
				, ANNO= DATEDIFF (MONTH, DATAINIZIOPRELIEVO,KEYDATA)/12 + 1
				, A.IDCONTRATTOPADRE
				, IDCONTRATTOFIGLIO = A.IDCONTRATTO
				, SOTTOTIPOCONTRATTO = ISNULL(DD.CODICESOTTOTIPOCONTRATTO,@STRINGA_LISTINO_O_SOTTOTIPO_ASSENTE)
				, A.IDCLIENTE
				, case 
					when dd.tipoClienteCluster like 'SCIOLTO%' 
					then ISNULL(CAST(IDLISTVEN AS VARCHAR(50)), @LIST_FITT_VEN_E)
					else CAST(IDLISTVEN AS VARCHAR(50))
				end IDLISTVEN
				, case 
					when dd.tipoClienteCluster like 'SCIOLTO%' 
					then ISNULL(CAST(IDLISTACQ AS VARCHAR(50)), 'LIST_FITTIZIO')
					else CAST(IDLISTACQ AS VARCHAR(50))
				end IDLISTACQ
				, ANNOMESEATTIVAZIONE = CONVERT(DATE, CONVERT(VARCHAR(6), DATAINIZIOPRELIEVO , 112) + '01')
				, CALENDARIO = KEYDATA
				, MESEDICONSUMO = MONTH(KEYDATA)
				, UTENZA = A.POD COLLATE LATIN1_GENERAL_CI_AS
				, CONSUMO = TOTMESE --CASE WHEN A.SERVIZIO = 'A' THEN TAGLIA ELSE CONSUMO END
				, SALDOULTIMOMESE = NULL
				, BONUSINIZIALE = CANONEATTUALE
				-- OLD , BONUSINIZIALE = NULL --BONUSDISATTIVAZIONE
				, MODALITAPAGAMENTO = ISNULL(MODALITAPAGAMENTO, 'BOLLETTINO')
				, MODALITASPEDIZIONEFATTURA = ISNULL(MODALITASPEDIZIONEFATTURA, 'CARTACEA')
				, CANONERAI = CASE WHEN A.UTENZA = 'D2' THEN 1 ELSE 0 END
				, FLAGTIPOPARCO = 'OSSERVATO'
				, ULTIMORECORDUTENZA
				, PRIMORECORDUTENZA
				, SALDOFATTURATO
				, ISNULL(IdCurvaICO, -1) IDCURVA
				, DATAFINEPRELIEVO
				, CANONEMESE = CANONEATTUALE
				, SMS = 0 
				, MINUTI = 0
				, GB = 0
				, CONSUMODEFF1 
				, CONSUMODEFF2 
				, CONSUMODEFF3 
				, CONSUMORAMO_1 = 0
				, CONSUMORAMO_2 = 0
				, FLAG_D2 = CASE WHEN CODTARIFFATRASPORTO_PUNTO LIKE '%D2%' THEN 1 ELSE 0 END
				, TAGLIA= ConsumoMeseAttuale
				, TAGLIARAMO_1 = NULL
				, TAGLIARAMO_2 =NULL
				, TAGLIAMINUTI=NULL
				, TAGLIASMS=NULL
				, TAGLIAGIGA=NULL
				, UNITARIOPS = PREZZOOLTRESOGLIA 
				, UNITARIOPM = PREZZOSOTTOSOGLIA
				, UNITARIOPM_RAMO1 =NULL 
				, UNITARIOPM_RAMO2  =NULL 
				, UNITARIOPS_RAMO1  =NULL 
				, UNITARIOPS_RAMO2  =NULL 
				, UNITARIOVENDITAPACCHETTO = ISNULL(CanoneAttuale,0)/(CASE WHEN CONSUMOMESEATTUALE=0 THEN 1 ELSE CONSUMOMESEATTUALE END )
				, UNITARIOACQUISTO =  (ISNULL(consumoDefF1* ACQF1,0) + isnull(consumoDefF2 * ACQF2,0) + isnull(consumoDefF3 * ACQF3, 0) )/ (CASE WHEN (TOTMESE)= 0 THEN 1 ELSE (TOTMESE) END)
				, VOLUMEPERSO= case when UltimorecordUtenza=1 then StimaConsumoAnnuo else null end
				,STIMACONSUMOANNUO_PARCO_OSS=STIMACONSUMOANNUO
				,STIMAMINUTI_PARCO_OSS=0
				,STIMASMS_PARCO_OSS=0
				,STIMAGB_PARCO_OSS=0
		FROM   [DBO].[NEWMODEL_PARCOENERGIA] AS A
		LEFT JOIN   [DBO].[FRC_WT_DIM_BASECLICONTR] AS DD  ON DD.IDCONTRATTO = A.IDCONTRATTO
		LEFT JOIN #ClientiSaldo F ON F.idCLIENTE = A.IDCLIENTE AND F.calendario = KEYDATA
		
		WHERE (FLAGINIZIOPREVISTO = 'ATTIVO'
				AND KEYDATA <= @DATAFINEOSSERVATO
				AND KEYDATA >= @DATAINIZIOOSSERVATO
			) -- vero parco osservato 
			--or (FlagInizioPrevisto = 'ATTIVO'
			--	and KeyData > @DATAFINEOSSERVATO
			--	and KeyData = DataInizioPrelievo
			--	and KeyData <= @DataFineNuoviReali                   
			--) -- Nuovi reali
		)

		SELECT e.*,
				COSTOMESE_OSS_INT = (case when TIPOCLIENTE like '%CONSUMER%' then @PERDITE_DI_RETE_CONSUMER 
											when TIPOCLIENTE like '%BUSINESS%' then @PERDITE_DI_RETE_BUSINESS
											else 1
										end) * (ConsumoDefF1 * l.VALORE_F1 + ConsumoDefF2 *l.VALORE_F2 + ConsumoDefF3 * l.VALORE_F3) --CONSUMO*UNITARIOACQUISTO -- SENZA COMPONENTI -- modifica 30/5/2019 chiesta da Nicolò
				, FATTURATO_OSS_INT=e.CANONEMESE
				, RICAVOMESE_OSS_INT = e.TAGLIA*e.UNITARIOVENDITAPACCHETTO  
					--MODIFICATO 23/04
					-- PER L'INTEGRATO IL RICAVO è COMPRENSIVO DI COMPONENTI, MENTRE PER LO SCIOLTO NO
				, DIFFERENZEPOSITIVE_OSS_INT= CASE WHEN e.TAGLIA-e.CONSUMO>0 THEN  e.TAGLIA-e.CONSUMO ELSE 0 END 
				, DIFFERENZENEGATIVE_OSS_INT=CASE WHEN e.TAGLIA-e.CONSUMO<0 THEN  e.TAGLIA-e.CONSUMO ELSE 0 END 
				, MOVIMENTAZCONTOPOS_INT_OSS=CASE WHEN e.TAGLIA-e.CONSUMO>0 THEN  (e.TAGLIA-e.CONSUMO)*e.UNITARIOPM ELSE 0 END 
				, MOVIMENTAZCONTONEG_INT_OSS=CASE WHEN e.TAGLIA-e.CONSUMO<0 THEN  (e.TAGLIA-e.CONSUMO)*e.UNITARIOPS ELSE 0 END 
				, MOVIMENTAZIONICONTO_INT_OSS= case when e.taglia-e.consumo<0 then (e.taglia-e.consumo) * e.unitarioPS else (e.taglia - e.consumo) * e.UNITARIOPM end -- (e.TAGLIA-e.CONSUMO)*e.UNITARIOPM
				, VOLUMEFINALE_OSS_INT=e.CONSUMO
				, BONUSINIZIALESALDATI=e.BONUSINIZIALE
				, CR_POSITIVO_INT_OSS = SUM(CASE WHEN e.TAGLIA-e.CONSUMO>=0 THEN (e.TAGLIA-e.CONSUMO)*e.UNITARIOPM ELSE 0 END ) OVER (PARTITION BY UTENZA, ANNOMESEATTIVAZIONE, IDCONTRATTOFIGLIO, ANNO ORDER BY CALENDARIO ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
				, CR_NEGATIVO_INT_OSS = SUM(CASE WHEN e.TAGLIA-e.CONSUMO<0 THEN  (e.TAGLIA-e.CONSUMO)*e.UNITARIOPS ELSE 0 END ) OVER (PARTITION BY UTENZA, ANNOMESEATTIVAZIONE, IDCONTRATTOFIGLIO, ANNO ORDER BY CALENDARIO ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
		INTO FRC_IMPORT_E
		FROM IMPORT_E e
		left join FRC_WT_DIM_LISTINI l 
			on e.idListAcq = l.ID_LISTINO collate Latin1_General_CI_AS
				and e.SERVIZIO = l.SERVIZIO
		option (MAXDOP 0)
		;



		WITH IMPORT_G AS (
		SELECT	SERVIZIO = 'G'
				, CANALE = DD.CANALEVENDITA 
				, TIPOCLIENTE = CASE WHEN DD.CANALEVENDITA='CAMPAGNA NAZIONALE' AND DD.TIPOCLIENTECLUSTER='CONSUMER' THEN 'CAMPAGNA NAZIONALE - CONSUMER' 
			ELSE DD.TIPOCLIENTECLUSTER END
				, MESE = CONVERT(DATE,CONVERT(VARCHAR(7), DD.DATASTIPULA, 112)  + '-01')
				, ANNO= DATEDIFF (MONTH, DATAINIZIOPRELIEVO,KEYDATA)/12 + 1
				, A.IDCONTRATTOPADRE
				, IDCONTRATTOFIGLIO = A.IDCONTRATTO
				, SOTTOTIPOCONTRATTO = ISNULL(DD.CODICESOTTOTIPOCONTRATTO,@STRINGA_LISTINO_O_SOTTOTIPO_ASSENTE)
				, A.IDCLIENTE
				, case 
					when dd.tipoClienteCluster like 'SCIOLTO%' 
					then ISNULL(CAST(IDLISTVEN AS VARCHAR(50)), @LIST_FITT_VEN_G)
					else CAST(IDLISTVEN AS VARCHAR(50))
				end IDLISTVEN
				, case 
					when dd.tipoClienteCluster like 'SCIOLTO%' 
					then ISNULL(CAST(IDLISTACQ AS VARCHAR(50)), 'LIST_FITTIZIO')
					else CAST(IDLISTACQ AS VARCHAR(50))
				end IDLISTACQ
				, ANNOMESEATTIVAZIONE = CONVERT(DATE, CONVERT(VARCHAR(6), DATAINIZIOPRELIEVO, 112 ) + '01')
				, CALENDARIO = KEYDATA
				, MESEDICONSUMO = MONTH(KEYDATA)
				, UTENZA = A.PDR 
				, CONSUMO = QUANTITA --CASE WHEN A.SERVIZIO = 'A' THEN TAGLIA ELSE CONSUMO END
				, SALDOULTIMOMESE = NULL
				, BONUSINIZIALE= CANONEATTUALE
				-- OLD , BONUSINIZIALE = NULL --BONUSDISATTIVAZIONE
				, MODALITAPAGAMENTO = ISNULL(MODALITAPAGAMENTO, 'BOLLETTINO')
				, MODALITASPEDIZIONEFATTURA = ISNULL(MODALITASPEDIZIONEFATTURA, 'CARTACEA')
				, CANONERAI = 0
				, FLAGTIPOPARCO = 'OSSERVATO'
				, ULTIMORECORDUTENZA
				, PRIMORECORDUTENZA
				, SALDOFATTURATO 
				, ISNULL(IdCurvaICO, -1) IDCURVA
				, DATAFINEPRELIEVO
				, CANONEMESE = CANONEATTUALE
				, SMS = 0 
				, MINUTI = 0
				, GB = 0
				, CONSUMODEFF1  =0
				, CONSUMODEFF2  = 0
				, CONSUMODEFF3  = 0
				, CONSUMORAMO_1 = 0
				, CONSUMORAMO_2  = 0
				, TAGLIA=ConsumoMeseAttuale
				, TAGLIARAMO_1 = NULL
				, TAGLIARAMO_2 = NULL
				, TAGLIAMINUTI=NULL
				, TAGLIASMS=NULL
				, TAGLIAGIGA=NULL
				, UNITARIOPS = PREZZOOLTRESOGLIA 
				, UNITARIOPM = PREZZOSOTTOSOGLIA
				, UNITARIOPM_RAMO1 =NULL 
				, UNITARIOPM_RAMO2  =NULL 
				, UNITARIOPS_RAMO1  =NULL 
				, UNITARIOPS_RAMO2  =NULL 
				, UNITARIOVENDITAPACCHETTO = ISNULL(CanoneAttuale,0)/(CASE WHEN CONSUMOMESEATTUALE=0 THEN 1 ELSE CONSUMOMESEATTUALE END )
				, UNITARIOACQUISTO = ISNULL(QUANTITA*CostoMateriaPrimaAcquisto, 0) / (CASE WHEN QUANTITA= 0 THEN 1 ELSE QUANTITA END)
				, VOLUMEPERSO= case when UltimorecordUtenza=1 then StimaConsumoAnnuo else null end
				, STIMACONSUMOANNUO_PARCO_OSS=STIMACONSUMOANNUO_DACURVA
				, STIMAMINUTI_PARCO_OSS=0
				, STIMASMS_PARCO_OSS=0
				, STIMAGB_PARCO_OSS=0
		FROM   [DBO].[NEWMODEL_PARCOGAS] AS A
		LEFT JOIN   [DBO].[FRC_WT_DIM_BASECLICONTR] AS DD  ON DD.IDCONTRATTO = A.IDCONTRATTO
			LEFT JOIN #ClientiSaldo F ON F.idCLIENTE = A.IDCLIENTE AND F.calendario = KEYDATA
		
		WHERE FLAGINIZIOPREVISTO = 'ATTIVO'
			AND KEYDATA <= @DATAFINEOSSERVATO
			AND KEYDATA >= @DATAINIZIOOSSERVATO
		)

		SELECT 
			g.*,
			COSTOMESE_OSS_INT = g.CONSUMO * l.COSTO_MATERIA_PRIMA --CONSUMO*UNITARIOACQUISTO -- modifica 30/5, richiesta da Nicolò
			, FATTURATO_OSS_INT=g.CANONEMESE
			, RICAVOMESE_OSS_INT= CanoneMese -- g.TAGLIA*g.UNITARIOVENDITAPACCHETTO -- funzionalmente equivalenti
	--NON HA SENSO DISTINGUERE PER SCIOLTO SE TANTO è VALIDO SOLO PER L'INT
	--		,RICAVOMESE_OSS_INT = CASE WHEN TIPOCLIENTE LIKE '%SCIOLTO%' THEN CONSUMO * UNITARIOVENDITAPACCHETTO ELSE TAGLIA*UNITARIOVENDITAPACCHETTO END  
			--MODIFICATO 23/04
			, DIFFERENZEPOSITIVE_OSS_INT = CASE WHEN g.TAGLIA-g.CONSUMO>0 THEN  g.TAGLIA-g.CONSUMO ELSE 0 END 
			, DIFFERENZENEGATIVE_OSS_INT = CASE WHEN g.TAGLIA-g.CONSUMO<0 THEN  g.TAGLIA-g.CONSUMO ELSE 0 END 
			, MOVIMENTAZCONTOPOS_INT_OSS = CASE WHEN g.TAGLIA-g.CONSUMO>0 THEN  (g.TAGLIA-g.CONSUMO)*g.UNITARIOPM ELSE 0 END 
			, MOVIMENTAZCONTONEG_INT_OSS = CASE WHEN g.TAGLIA-g.CONSUMO<0 THEN  (g.TAGLIA-g.CONSUMO)*g.UNITARIOPS ELSE 0 END 
			, MOVIMENTAZIONICONTO_INT_OSS = case when g.taglia > g.consumo then (g.TAGLIA-g.CONSUMO)*g.UNITARIOPM else (g.taglia-g.consumo)*g.UNITARIOPS end
			, VOLUMEFINALE_OSS_INT = g.CONSUMO
			, BONUSINIZIALESALDATI = g.BONUSINIZIALE
			, CR_POSITIVO_INT_OSS = SUM(CASE WHEN G.TAGLIA-G.CONSUMO>=0 THEN  (G.TAGLIA-G.CONSUMO)*G.UNITARIOPM ELSE 0 END ) OVER (PARTITION BY UTENZA, ANNOMESEATTIVAZIONE, IDCONTRATTOFIGLIO, ANNO ORDER BY CALENDARIO ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
			, CR_NEGATIVO_INT_OSS = SUM(CASE WHEN G.TAGLIA-G.CONSUMO<0 THEN  (G.TAGLIA-G.CONSUMO)*G.UNITARIOPS ELSE 0 END ) OVER (PARTITION BY UTENZA, ANNOMESEATTIVAZIONE, IDCONTRATTOFIGLIO, ANNO ORDER BY CALENDARIO ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
		INTO FRC_IMPORT_G
		FROM IMPORT_G  g
		left join FRC_WT_DIM_LISTINI l 
			on g.idListAcq = l.ID_LISTINO collate Latin1_General_CI_AS
			and g.SERVIZIO = l.SERVIZIO
		option (MAXDOP 0);
	
		

		WITH IMPORT_M AS(
		SELECT  SERVIZIO = 'M'
				, CANALE = DD.CANALEVENDITA
				, TIPOCLIENTE = CASE WHEN DD.CANALEVENDITA='CAMPAGNA NAZIONALE' AND DD.TIPOCLIENTECLUSTER='CONSUMER' THEN 'CAMPAGNA NAZIONALE - CONSUMER' 
			ELSE DD.TIPOCLIENTECLUSTER END
				, MESE = CONVERT(DATE,CONVERT(VARCHAR(7), DD.DATASTIPULA, 112)  + '-01')
				, ANNO= DATEDIFF (MONTH, DATAINIZIO, KEYDATA)/12 + 1
				, A.IDCONTRATTOPADRE
				, IDCONTRATTOFIGLIO = A.IDCONTRATTO
				, SOTTOTIPOCONTRATTO = ISNULL(A.NOMETARIFFA,@STRINGA_LISTINO_O_SOTTOTIPO_ASSENTE)
				, A.IDCLIENTE
				, IDLISTVEN = @STRINGA_LISTINO_O_SOTTOTIPO_ASSENTE
				, IDLISTACQ = 'LIST_FITTIZIO'
				, ANNOMESEATTIVAZIONE = CONVERT(DATE, CONVERT(VARCHAR(6), DATAINIZIO, 112 ) + '01')
				, CALENDARIO = KEYDATA
				, MESEDICONSUMO = MONTH(KEYDATA)
				, UTENZA 
				, CONSUMO = NULL
				, SALDOULTIMOMESE = NULL
				, BONUSINIZIALE = NULL --BONUSDISATTIVAZIONE
				, MODALITAPAGAMENTO = ISNULL(MODALITAPAGAMENTO, 'BOLLETTINO')
				, MODALITASPEDIZIONEFATTURA = ISNULL(MODALITASPEDIZIONEFATTURA, 'CARTACEA')
				, CANONERAI = 0
				, FLAGTIPOPARCO = 'OSSERVATO'
				, ULTIMORECORDUTENZA
				, PRIMORECORDUTENZA
				, SALDOFATTURATO
				, IDCURVA = 1  -- DEFAULT COME DA MAIL 
				, DATAFINEPRELIEVO = DATAFINE
				, CANONEMESE = CANONEMOBILE
				, SMS = SMSMESE 
				, MINUTI = MINUTIMESE
				, GB = MBMESE / 1024
				, CONSUMODEFF1 = 0 
				, CONSUMODEFF2 = 0
				, CONSUMODEFF3 = 0
				, CONSUMORAMO_1 = 0
				, CONSUMORAMO_2 = 0
				, TAGLIA= NULL
				, TAGLIARAMO_1 = NULL
				, TAGLIARAMO_2 = NULL
				, TAGLIAMINUTI=case when TAGLIAMINUTI <> 'FLAT' then cast(TAGLIAMINUTI as float) else NULL end
				, TAGLIASMS =case when TAGLIASMS <> 'FLAT' then cast(TAGLIASMS as float) else NULL end
				, TAGLIAGIGA=case when TAGLIAGIGA <> 'FLAT' then cast(TAGLIAGIGA as float) else NULL end
				, UNITARIOPS = NULL 
				, UNITARIOPM = NULL
				, UNITARIOPM_RAMO1 =NULL 
				, UNITARIOPM_RAMO2  =NULL 
				, UNITARIOPS_RAMO1  =NULL 
				, UNITARIOPS_RAMO2  =NULL 
				, UNITARIOVENDITAPACCHETTO =ROINTMOBILE.VENDITAEURO 
				, UNITARIOACQUISTO =@UNITARIOACQUISTOMOBILE
				, VOLUMEPERSO=NULL
				, STIMACONSUMOANNUO_PARCO_OSS=0
				
			FROM NEWMODEL_PARCOMOBILE A
			LEFT JOIN   [DBO].[FRC_WT_DIM_BASECLICONTR] AS DD  ON DD.IDCONTRATTO = A.IDCONTRATTO
			LEFT JOIN #ClientiSaldo F ON F.idCLIENTE = A.IDCLIENTE AND F.calendario = KEYDATA
			LEFT JOIN     [DBO].[FRC_WT_DIM_ROINT_MOBILE] ROINTMOBILE
			ON UPPER(ROINTMOBILE.PM_NOME COLLATE LATIN1_GENERAL_CI_AS) = UPPER(A.NOMETARIFFA)
			WHERE KEYDATA <= @DATAFINEOSSERVATO
			AND KEYDATA>=@DATAINIZIOOSSERVATO)


			SELECT 
				IMPORT_M.*
				, STIMAMINUTI_PARCO_OSS=(CASE WHEN (PERC_CONSUMO_F1)<>0 THEN  IMPORT_M.MINUTI/(PERC_CONSUMO_F1) ELSE 0 END)
				, STIMASMS_PARCO_OSS=(CASE WHEN (PERC_CONSUMO_F2)<>0 THEN  IMPORT_M.SMS/(PERC_CONSUMO_F2) ELSE 0 END)
				, STIMAGB_PARCO_OSS=(CASE WHEN (PERC_CONSUMO_F3)<>0 THEN  IMPORT_M.GB/(PERC_CONSUMO_F3)	ELSE 0 END)
				, COSTOMESE_OSS_INT = UNITARIOACQUISTO
				, FATTURATO_OSS_INT=0
				, RICAVOMESE_OSS_INT =UNITARIOVENDITAPACCHETTO
				, DIFFERENZEPOSITIVE_OSS_INT=0
				, DIFFERENZENEGATIVE_OSS_INT=0
				, MOVIMENTAZCONTOPOS_INT_OSS=0
				, MOVIMENTAZCONTONEG_INT_OSS=0
				, MOVIMENTAZIONICONTO_INT_OSS=0
				, VOLUMEFINALE_OSS_INT=0
				, BONUSINIZIALESALDATI=BONUSINIZIALE
				, CR_POSITIVO_INT_OSS = SUM(CASE WHEN IMPORT_M.TAGLIA-IMPORT_M.CONSUMO>=0 THEN  (IMPORT_M.TAGLIA-IMPORT_M.CONSUMO)*IMPORT_M.UNITARIOPM ELSE 0 END ) OVER (PARTITION BY UTENZA, ANNOMESEATTIVAZIONE, IDCONTRATTOFIGLIO, ANNO ORDER BY CALENDARIO ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
				, CR_NEGATIVO_INT_OSS = SUM(CASE WHEN IMPORT_M.TAGLIA-IMPORT_M.CONSUMO<0 THEN  (IMPORT_M.TAGLIA-IMPORT_M.CONSUMO)*IMPORT_M.UNITARIOPS ELSE 0 END ) OVER (PARTITION BY UTENZA, ANNOMESEATTIVAZIONE, IDCONTRATTOFIGLIO, ANNO ORDER BY CALENDARIO ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
			INTO FRC_IMPORT_M
			FROM IMPORT_M 
			LEFT JOIN FRC_WT_DIM_CURVECOMPORTAMENTO CURVECONSUMO
			ON IMPORT_M.IDCURVA=CURVECONSUMO.IDCURVA
			AND IMPORT_M.SERVIZIO=CURVECONSUMO.SERVIZIO
			AND IMPORT_M.MESEDICONSUMO=CURVECONSUMO.MESEDICONSUMO
			option (MAXDOP 0)
		;
